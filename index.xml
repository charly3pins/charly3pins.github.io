<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>charly3pins.dev</title>
    <link>https://charly3pins.dev/</link>
    <description>Recent content on charly3pins.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Nov 2020</lastBuildDate><atom:link href="https://charly3pins.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Collectus</title>
      <link>https://charly3pins.dev/code/collectus/</link>
      <pubDate>Sat, 22 Sep 2018</pubDate>
      
      <guid>https://charly3pins.dev/code/collectus/</guid>
      <description>As my Final Year Project for Computer Science Engineering I builded a flexible database for collectibles and any other objects or data that any user wants to have ordered and classified in a simple and effective way.</description>
      <content>&lt;h2 id=&#34;why&#34;&gt;WHY&lt;/h2&gt;
&lt;p&gt;The motivation of this project is half personal and half academic. Let me explain. At home my father always collected a lot of things, from the oldest books you can imagine until the most recent new Funko POP, through Swiss Knives or dice among others. Having that variety of objects and a lot of them (too many to be honest) cataloguing that amount of items always had been a challenge for him.&lt;/p&gt;
&lt;p&gt;He always tried to classify in different ways such as using an Excel, free applications, paid applications, etc. At the end every time something similar happens, the handicap of his &amp;ldquo;collection of collections&amp;rdquo; (as he describes it) is too singular, and it doesn&amp;rsquo;t fit anywhere. He&amp;rsquo;s a developer and I was in my last year at University studying Computer Science Engineering so we started to plan how we could solve that problem by doing ourselves the application.&lt;/p&gt;
&lt;p&gt;After a few days/weeks I realized that soon I would have to choose a project to present as my Final Year Project, so I decided to give it a try this familiar crazy idea and propose it to my tutor. She was excited about the idea we had and she accepted happily.&lt;/p&gt;
&lt;p&gt;Once I had the approval of my tutor, it was an amazing new because the personal project we wanted to develop in our free times, now I had the opportunity to dedicate all my effort to not only solve the problem we had, but to present it as a final project. And that&amp;rsquo;s how all started.&lt;/p&gt;
&lt;p&gt;At the end the project ended up being super successful, my tutor was delighted with the result, and the court liked it a lot, they even told me to send them an email when I put it into production so they can use it and catalog their own collections.&lt;/p&gt;
&lt;h2 id=&#34;what&#34;&gt;WHAT&lt;/h2&gt;
&lt;p&gt;I named the application Collectus as it&amp;rsquo;s the Latin word meaning &amp;ldquo;gather, collect&amp;rdquo; so in that case it fits perfectly. It is a system flexible database for collectibles and any other objects or data the user wants to have ordered and classified. Collectus is thought for collectors, allowing them to keep track of any kind of collection they have, using a system database with an open structure adaptable to every need. It also provides two types of login for the users, creating a new one for the platform or using their Facebook account connecting it with the Facebook API.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/code/collectus/main-app.jpeg&#34; alt=&#34;app&#34;&gt;
&lt;img src=&#34;https://charly3pins.dev/images/code/collectus/login.jpeg&#34; alt=&#34;login&#34;&gt;&lt;/p&gt;
&lt;p&gt;Using templates the user can set all kinds of records for such diverse items as stamps or placas of cava, posters or fossils, rag dolls or lottery tickets. Once defined the template (category) for the object or type of object of interest, and the user can enter data immediately.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/code/collectus/item-edit.jpeg&#34; alt=&#34;item edit&#34;&gt;
&lt;img src=&#34;https://charly3pins.dev/images/code/collectus/amazon-mapping.jpeg&#34; alt=&#34;amazon mapping&#34;&gt;&lt;/p&gt;
&lt;p&gt;To facilitate all this task, it incorporates tools to help the user. The most prominent it is provided by the Amazon Product API to automatically read information from its database at the time of data entry.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/code/collectus/amazon-search.jpeg&#34; alt=&#34;amazon search&#34;&gt;&lt;/p&gt;
&lt;p&gt;From here users will be able to read information according to various search criteria offered in the application and store them. There is also a price comparison between the various Amazon shops in all countries to find different prices and assist in the purchase of items to users.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/code/collectus/amazon-results.jpeg&#34; alt=&#34;amazon results&#34;&gt;&lt;/p&gt;
&lt;p&gt;All this has been developed under an attractive GUI and usability as a main goal.&lt;/p&gt;
&lt;p&gt;Programming languages and tools used for this project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PHP 5, JavaScript and jQuery for the backend&lt;/li&gt;
&lt;li&gt;HTML and CSS for the frontend&lt;/li&gt;
&lt;li&gt;AJAX as the way of calling the server side&lt;/li&gt;
&lt;li&gt;Amazon Product API for the product research and price comparison&lt;/li&gt;
&lt;li&gt;Facebook API for the login&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;final-thoughts&#34;&gt;FINAL THOUGHTS&lt;/h2&gt;
&lt;p&gt;It was my first big project as a software developer building a web and I learned a lot of things like learning new programming languages and architecture of the projects; designing the databases correctly; polish the smallest visual detail; battle with external APIs connecting to them; organize myself in order to deliver small chunks of the project step by step instead of the entire project at once; write appropriate documentation about the functionality of the project and many others probably.&lt;/p&gt;
&lt;p&gt;I have always wanted to make a second improved version of the project, now with the experience I have and the skills that I have been acquiring throughout these years of work. I&amp;rsquo;ve started several times but never finished&amp;hellip;&lt;/p&gt;
&lt;p&gt;I hope one day to be able to officially launch the application and tell you about it here. üöÄ&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Tournaments generator</title>
      <link>https://charly3pins.dev/code/tournaments-generator/</link>
      <pubDate>Fri, 01 May 2020</pubDate>
      
      <guid>https://charly3pins.dev/code/tournaments-generator/</guid>
      <description>Prueba de concepto de la construcci√≥n de una aplicaci√≥n para administrar torneos FIFA 20 entre diferentes personas usando Flutter para construir una aplicaci√≥n m√≥vil y Go para construir una API que act√∫a como servidor. Tambi√©n us√© Python para construir raspadores simples.</description>
      <content>&lt;h2 id=&#34;por-qu√©&#34;&gt;POR QU√â&lt;/h2&gt;
&lt;p&gt;La motivaci√≥n para iniciar este proyecto no es otra que mi curiosidad por las aplicaciones m√≥viles. Es obvio que la forma de consumir tecnolog√≠a ha cambiado en los √∫ltimos a√±os y cada vez se hace m√°s a trav√©s de un dispositivo m√≥vil. Por esa raz√≥n, quer√≠a explorar c√≥mo funcionan las aplicaciones m√≥viles y c√≥mo puedo crear una desde cero.
Hice algunos tutoriales de Android, pero como est√°n cambiando muchas cosas al lanzar nuevas versiones y mi idea era crear algo gen√©rico para todos los dispositivos, decid√≠ intentarlo con [Flutter](&lt;a href=&#34;https://flutter.dev&#34;&gt;https://flutter.dev&lt;/a&gt; /).&lt;/p&gt;
&lt;p&gt;Estaba entre &lt;a href=&#34;https://reactnative.dev/&#34;&gt;React Native&lt;/a&gt; o Flutter, pero despu√©s de leer algunos pros y contras, decid√≠ aliarme con Flutter. Comenc√© a leer su &lt;a href=&#34;https://flutter.dev/docs&#34;&gt;documentaci√≥n&lt;/a&gt; y era muy similar a Android (est√°n usando Dart en la parte inferior) y comenc√© a recordar mis viejos tiempos en los tutoriales de Android y me gusta, as√≠ que Yo continu√©. Despu√©s de unos d√≠as leyendo solo documentaci√≥n t√©cnica, continu√© con la aplicaci√≥n &amp;ldquo;hello world&amp;rdquo; &lt;a href=&#34;https://flutter.dev/docs/get-started/codelab&#34;&gt;tutorial&lt;/a&gt; que proporcionan en el sitio web. Y finalmente, estaba listo para comenzar mi propio proyecto.&lt;/p&gt;
&lt;p&gt;Para cuando comenz√≥ la pandemia mundial, mis amigos y yo comenzamos una liga FIFA 20 en PS4 para distraernos por las tardes / noches. Inicialmente solo se trataba de jugar y nada m√°s, pero luego comenzamos a tener un panel de Power BI para estad√≠sticas, un canal de YouTube para compartir los juegos en vivo y luego almacenarlos all√≠ y un Twitter para tuitear las actualizaciones de la clasificaci√≥n cada semana. La primera liga se cre√≥ de forma manual y un poco dolorosa y s√∫per est√°tica, as√≠ que decid√≠ usar ese tema para crear una aplicaci√≥n que nos ayude a administrar la segunda liga creando la liga, administrando nuestros equipos y partidos all√≠, notificando los resultados. y mostrando estad√≠sticas m√°s detalladas en su interior.&lt;/p&gt;
&lt;h2 id=&#34;qu√©&#34;&gt;QU√â&lt;/h2&gt;
&lt;p&gt;En primer lugar, quer√≠a poner toda la informaci√≥n real de FIFA 20 dentro del sitio web relacionada con ligas, equipos y jugadores. Para eso encontr√© algunos sitios web que tienen esa informaci√≥n abierta y gratuita, pero no tienen una API para consumirla. La idea de copiar manualmente era muy tentadora, pero prefer√≠ escribir un rastreador simple en &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt; usando la biblioteca &lt;a href=&#34;https://www.crummy.com/software/BeautifulSoup/bs4/doc/#css-selectors&#34;&gt;BeautifulSoup&lt;/a&gt; con los css-selectors que proporciona. Haciendo algunos ajustes aqu√≠ y all√°, al final termin√© teniendo 3 archivos json, uno para cada tema que quer√≠a inicialmente, ¬°as√≠ que todo perfecto!&lt;/p&gt;
&lt;p&gt;Luego, para poder introducir toda esa informaci√≥n en la base de datos, la idea fue crear una herramienta de l√≠nea de comandos que lea esos archivos y genere las correspondientes declaraciones SQL y luego genere los archivos de migraci√≥n correspondientes.
Eleg√≠ &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; como lenguaje de programaci√≥n para la API y cre√© un &lt;code&gt;cmd&lt;/code&gt; que me permite hacer la idea deseada. La base de datos ser√≠a &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; por lo que las &amp;ldquo;inserciones&amp;rdquo; tienen que estar de acuerdo con su sintaxis.&lt;/p&gt;
&lt;p&gt;Con todos los datos iniciales listos, comenc√© a dise√±ar el resto de la base de datos y los posibles puntos finales lo necesitan para administrar toda esa informaci√≥n. Eleg√≠ &lt;a href=&#34;https://github.com/gorilla/mux&#34;&gt;mux&lt;/a&gt; para HTTP por su simplicidad pero potente en comparaci√≥n con la lib est√°ndar (solo para el an√°lisis de par√°metros vale la pena &amp;hellip;). Como quer√≠a explorar m√°s el lado de la aplicaci√≥n m√≥vil que el lado del servidor, simplemente organic√© el c√≥digo usando la [Arquitectura de capas](&lt;a href=&#34;https://www.oreilly.com/library/view/software-architecture-patterns/9781491971437/ch01&#34;&gt;https://www.oreilly.com/library/view/software-architecture-patterns/9781491971437/ch01&lt;/a&gt; .html) agrupando los elementos por funci√≥n y us√© &lt;a href=&#34;https://gorm.io/index.html&#34;&gt;GORM&lt;/a&gt; como el ORM para simplificar la consulta y las asignaciones entre la base de datos y mis modelos.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/api-structure.jpeg&#34; alt=&#34;api structure&#34;&gt;&lt;/p&gt;
&lt;p&gt;Dentro de la carpeta &lt;code&gt;cmd&lt;/code&gt; he creado diferentes comandos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;migraci√≥n: gestiona las migraciones en la base de datos&lt;/li&gt;
&lt;li&gt;analizador: traduce el json del rastreador en sentencias sql&lt;/li&gt;
&lt;li&gt;servidor: ejecuta el servidor&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dentro de la carpeta &lt;code&gt;pkg&lt;/code&gt; es f√°cil identificar qu√© est√°n haciendo las carpetas por su propio nombre.&lt;/p&gt;
&lt;p&gt;Para la aplicaci√≥n m√≥vil, comenc√© a poner todos los archivos dentro de una carpeta de &lt;code&gt;componentes&lt;/code&gt;, pero cuando comenz√≥ a crecer, fue una tarea dif√≠cil de administrar. Despu√©s de agregar m√°s complejidad a la aplicaci√≥n, termino encontrando una forma limpia de organizar el c√≥digo, dividi√©ndolo en dos carpetas separadas; uno para el n√∫cleo y otro para la interfaz de usuario. Luego dentro de cada uno tambi√©n categoric√© los diferentes tipos de componentes en funci√≥n de sus responsabilidades y al final el c√≥digo (al menos para m√≠ que no soy un experto en Flutter) termin√≥ luciendo s√∫per limpio y (sin duda) m√°s mantenible . Debajo de la organizaci√≥n de carpetas en una vista general:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/app-structure.jpeg&#34; alt=&#34;app structure&#34;&gt;&lt;/p&gt;
&lt;p&gt;Al principio, cuando comenc√© a codificar y ver los resultados, todo fue s√∫per elegante y pens√© que era m√°s f√°cil de lo esperado. Conectar la aplicaci√≥n con la API fue solo una cuesti√≥n de saber c√≥mo usar la biblioteca &lt;code&gt;http&lt;/code&gt; y los m√©todos&lt;code&gt; get&lt;/code&gt; o &lt;code&gt;post&lt;/code&gt; se conectaron sin problemas.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; http.Client();

    &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; jsonBody &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; json.encode(user.toJson());
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; client.post(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$&lt;/span&gt;_baseUrl&lt;span style=&#34;color:#e6db74&#34;&gt;/token&amp;#34;&lt;/span&gt;,
        headers: {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;}, body: jsonBody);

    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (response.statusCode &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;) {
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; User.fromJson(json.decode(response.body));
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;El √∫nico problema al que me he enfrentado all√≠ es que estaba ejecutando las aplicaciones desde el emulador de Android; eso significa que se estaba ejecutando en una m√°quina virtual, por lo que la IP no era mi local y no puede acceder al &lt;code&gt;localhost&lt;/code&gt;. Despu√©s de un poco de investigaci√≥n, encontr√© el correcto y todo funcion√≥ correctamente.&lt;/p&gt;
&lt;p&gt;Los problemas comenzaron cuando quer√≠a pasar informaci√≥n entre componentes y actualizar la vista en funci√≥n de esa informaci√≥n, o mejor a√∫n, no actualizar si nada cambia cuando entro de nuevo en una vista (por ejemplo, al pasar de una lista a una vista de detalle, y volviendo de nuevo a la lista). Despu√©s de un d√≠a leyendo en foros sobre el mismo problema al que me estaba enfrentando, encontr√© el paquete [Proveedor] (&lt;a href=&#34;https://pub.dev/packages/provider&#34;&gt;https://pub.dev/packages/provider&lt;/a&gt;) y todo parec√≠a f√°cil y el santo grial para todo, pero no lo era.&lt;/p&gt;
&lt;p&gt;¬°El verdadero dolor acaba de comenzar all√≠! Me tom√≥ algunos d√≠as entender realmente c√≥mo funciona. El proveedor inicial es f√°cil de entender y lo usa y funciona, pero luego desea cambiar solo una peque√±a parte de la vista, o desea reconstruir la totalidad, o desea modificar algunos valores en una vista A y luego vaya a la vista B y vea los cambios all√≠, y todos esos ejemplos est√° codificado de manera completamente diferente y primero debe saber que hay una forma para cada caso de hacer las cosas y segundo, debe saber c√≥mo hacerlo. Al final utilic√© Provider, ProxyProvider, StreamProvider y ChangeNotifierProvider.&lt;/p&gt;
&lt;p&gt;El proyecto no est√° terminado pero por ahora est√° En Espera con las siguientes funcionalidades:&lt;/p&gt;
&lt;p&gt;Inicialmente, el usuario puede cambiar entre las vistas de registro / inicio de sesi√≥n.
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/signup.png&#34; alt=&#34;signup&#34;&gt;
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/login.png&#34; alt=&#34;login&#34;&gt;&lt;/p&gt;
&lt;p&gt;Una vez que el usuario est√° dentro de la aplicaci√≥n esta tiene diferentes pesta√±as donde los pr√≥ximos &lt;code&gt;Partidos&lt;/code&gt; tiene que jugar, los&lt;code&gt; Torneos&lt;/code&gt; que est√° jugando y los &lt;code&gt;Grupos&lt;/code&gt; donde est√° presente y los miembros dentro. En la parte superior tiene una barra de navegaci√≥n con una foto de perfil, un √≠cono de campana para las notificaciones, un √≠cono de lente para buscar a otros miembros y agregar como sus amigos y el bot√≥n de cierre de sesi√≥n para desconectarse.
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/home.png&#34; alt=&#34;home&#34;&gt;&lt;/p&gt;
&lt;p&gt;Si hace clic en la foto de perfil va directamente al perfil del usuario donde muestra los amigos y donde puede editar su informaci√≥n personal (nombre, nombre de usuario, foto de perfil):
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/profile.png&#34; alt=&#34;profile&#34;&gt;&lt;/p&gt;
&lt;p&gt;Al presionar el √≠cono de la lente, cambia la vista a la funcionalidad de s√∫per buscador que permite al usuario encontrar a otras personas que ya est√°n en la plataforma, agregarlas como sus amigos y luego crear grupos, generar torneos y jugar partidos juntos. El buscador es una b√∫squeda de &amp;ldquo;me gusta&amp;rdquo;, por lo que si alguna de las letras que introduce aparece en alg√∫n nombre de usuario, entonces se muestra all√≠.
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/searcher.png&#34; alt=&#34;searcher&#34;&gt;&lt;/p&gt;
&lt;p&gt;Luego de eso, si el usuario ingresa a un perfil que no es amigo, aparecer√° el bot√≥n para agregarlo y si se hace clic, ocultar√° ese bot√≥n y mostrar√° la informaci√≥n de que ya hay una solicitud enviada, esperando al otro usuario. para contestarlo.
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/add-friend.png&#34; alt=&#34;add friend&#34;&gt;
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/add-friend-requested.png&#34; alt=&#34;add friend requested&#34;&gt;&lt;/p&gt;
&lt;p&gt;Actuando como el otro usuario, al iniciar sesi√≥n, el icono de campana mostrar√° una nueva notificaci√≥n. Entrar aparece como una notificaci√≥n de amigo y se puede responder directamente desde la lista o entrar en el perfil de &amp;ldquo;solicitante&amp;rdquo; y aceptar / rechazar all√≠. Si se acepta la solicitud de amistad, aparecer√° como un nuevo amigo en el perfil del usuario.
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/friend-request-notification.png&#34; alt=&#34;friend request notification&#34;&gt;
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/friend-request-notification-answer.png&#34; alt=&#34;friend request notification answer&#34;&gt;
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/profile-multifriends.png&#34; alt=&#34;profile multi friends&#34;&gt;&lt;/p&gt;
&lt;p&gt;Despu√©s de que un usuario tiene algunos amigos, es el momento en que puede crear un grupo. Para eso la aplicaci√≥n tiene la tercera pesta√±a llamada &lt;code&gt;Grupos&lt;/code&gt; y un bot√≥n (+).
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/new-group.png&#34; alt=&#34;new group&#34;&gt;&lt;/p&gt;
&lt;p&gt;Dentro del generador de grupos, mostrar√° la lista de amigos en la parte superior. A medida que se seleccionan, se colocan en la lista siguiente, donde se pueden eliminar si se desea; cuando se seleccionan todos los amigos, es hora de pasar a la siguiente pantalla con el bot√≥n (&amp;ndash;&amp;gt;).
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/new-group-selected.png&#34; alt=&#34;new group selected&#34;&gt;&lt;/p&gt;
&lt;p&gt;El siguiente paso es poner un buen nombre para ese grupo y luego presionar la casilla uno para crear el grupo.
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/new-group-name.png&#34; alt=&#34;new group name&#34;&gt;&lt;/p&gt;
&lt;p&gt;Cuando el usuario regresa a la vista de inicio, aparece el nuevo grupo creado y sus miembros en la lista.
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/new-group-created.png&#34; alt=&#34;new group created&#34;&gt;&lt;/p&gt;
&lt;p&gt;A partir de aqu√≠ lo que falta es crear los &lt;code&gt;Torneos&lt;/code&gt; seleccionando el grupo y los miembros de ese grupo que quieren jugar, el n√∫mero de equipos para cada integrante, los equipos, las rondas, el tipo de torneo, etc. y luego generar el calendario. Muestre el calendario en la pesta√±a &lt;code&gt;Partidos&lt;/code&gt; y dentro de cada partida permita a los usuarios agregar los resultados. Tambi√©n proporcione una clasificaci√≥n y las estad√≠sticas de cada partido y una agrupada para cada encuentro y una gen√©rica.&lt;/p&gt;
&lt;h2 id=&#34;pensamientos-finales&#34;&gt;PENSAMIENTOS FINALES&lt;/h2&gt;
&lt;p&gt;Con esta prueba de concepto tuve la oportunidad de trabajar en una aplicaci√≥n compleja en t√©rminos de dise√±o de componentes reutilizables en una aplicaci√≥n m√≥vil, llamar a una API externa para administrar la informaci√≥n que se muestra en la aplicaci√≥n y aprender a usar el paquete Provider para mover informaci√≥n. entre m√∫ltiples vistas y controlar el estado de la aplicaci√≥n de una forma m√°s sencilla y eficaz.&lt;/p&gt;
&lt;p&gt;Hay mucho m√°s que aprender con respecto al desarrollo m√≥vil, pero considero este proyecto como un paso inicial para empezar. Alg√∫n d√≠a har√© las vistas que faltan para que podamos usarlas en el mundo real, pero espero que no sea porque tengamos otra pandemia üòè&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>How to add Google Analytics to your Hugo site</title>
      <link>https://charly3pins.dev/blog/how-to-add-google-analytics-to-your-hugo-site/</link>
      <pubDate>Mon, 23 Nov 2020</pubDate>
      
      <guid>https://charly3pins.dev/blog/how-to-add-google-analytics-to-your-hugo-site/</guid>
      <description>Quick tutorial how to integrate Google Analytics in a Hugo website.</description>
      <content>&lt;h2 id=&#34;google-analytics&#34;&gt;Google Analytics&lt;/h2&gt;
&lt;p&gt;First of all what you need is to obtain a Google Analytics tracking ID. For that you need to sign up at &lt;a href=&#34;https://analytics.google.com/analytics/web/&#34;&gt;Google Analytics&lt;/a&gt;. Then, you need to create a tracking ID following the next steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click on &lt;code&gt;Admin&lt;/code&gt; button (on the bottom left corner).&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Create Account&lt;/code&gt; button.&lt;/li&gt;
&lt;li&gt;After all the steps filled, click the &lt;code&gt;Create&lt;/code&gt; button and accept the terms and conditions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After the completion of these steps you will obtain your tracking ID. Copy it for add to your Hugo site later.&lt;/p&gt;
&lt;h2 id=&#34;hugo-configuration&#34;&gt;Hugo configuration&lt;/h2&gt;
&lt;p&gt;Now it&amp;rsquo;s turn to add the tracking ID to your site.
The easiest way for do it is using the Hugo&amp;rsquo;s &lt;a href=&#34;https://gohugo.io/templates/internal/#google-analytics&#34;&gt;internal template&lt;/a&gt; provided by Hugo. You just need to add a new variable called &lt;code&gt;googleAnalytics&lt;/code&gt; with the &lt;code&gt;tracking ID&lt;/code&gt; obtained from the previous step in your &lt;code&gt;config.toml&lt;/code&gt; like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;googleAnalytics&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UA-123-45&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The next step is to add the following snippet of code in your site:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_internal/google_analytics.html&amp;#34;&lt;/span&gt; . }}&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should search for the &lt;code&gt;head&lt;/code&gt; partial template and add it inside the &lt;code&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;
&lt;h2 id=&#34;checking-the-integration&#34;&gt;Checking the integration&lt;/h2&gt;
&lt;p&gt;Before passing that to production you can test it running your site locally performing the next command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hugo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;serve&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The default url on localhost is &lt;code&gt;http://localhost:1313&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Open again or refresh &lt;a href=&#34;https://analytics.google.com/analytics/web/&#34;&gt;Google Analytics&lt;/a&gt; on a different tab.&lt;/p&gt;
&lt;p&gt;Check the dashboard and you should be able to see the number under the section Active Users right now as 1 like the picture below:
&lt;img src=&#34;https://charly3pins.dev/images/google-analytics-active-users.png&#34; alt=&#34;active-users&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Raspberry Pi media player with Plex, Transmission, Sonarr, Bazarr and Jackett</title>
      <link>https://charly3pins.dev/blog/raspberry-pi-media-player-with-plex-transmission-sonarr-bazarr-and-jackett/</link>
      <pubDate>Thu, 05 Nov 2020</pubDate>
      
      <guid>https://charly3pins.dev/blog/raspberry-pi-media-player-with-plex-transmission-sonarr-bazarr-and-jackett/</guid>
      <description>Build your own media player using a BitTorrent client (Transmission), a PVR for Usenet and BitTorrent users (Sonarr), an API Support for your the torrent trackers (Jackett), a manager of subtitles in Sonarr &amp; Radarr (Bazarr) and a client‚Äìserver media player (Plex).</description>
      <content>&lt;p&gt;So you have a Raspberry Pi abandoned and always wanted to use it for something useful. Also you like to see series but there are too many providers and you don&amp;rsquo;t know which one subscribes to it. Don&amp;rsquo;t worry with this tutorial you will have both problems solved at once; You will use the Raspberry Pi for watching your favourite series with no limits!&lt;/p&gt;
&lt;h2 id=&#34;install-raspberry-os&#34;&gt;Install Raspberry OS&lt;/h2&gt;
&lt;p&gt;First of all we need to install an Operating System in our Raspberry. So for that we have different options explained in the &lt;a href=&#34;https://www.raspberrypi.org/downloads/raspberry-pi-os/&#34;&gt;official documentation&lt;/a&gt;. I personally decided for the &lt;code&gt;Raspberry Pi OS (32-bit) Lite&lt;/code&gt; as I don&amp;rsquo;t want any desktop or any recommended software, so the lighter the better.&lt;/p&gt;
&lt;p&gt;From the &lt;a href=&#34;https://www.raspberrypi.org/documentation/installation/installing-images/&#34;&gt;source&lt;/a&gt; we follow the instructions for the linux image.&lt;/p&gt;
&lt;p&gt;AS you know, we need a microSD for running the OS in a Raspberry Pi, so we have to connect to our laptop and know the name of it. For that we can open a terminal and type:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lsblk&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In my case it is &lt;code&gt;/dev/sda&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Once we know the name of the SD, we need to write the image to the card with the command below making sure you replace the input file &lt;code&gt;if=&lt;/code&gt; argument with the path to your .img file, and the &lt;code&gt;/dev/sda&lt;/code&gt; in the output file &lt;code&gt;of=&lt;/code&gt; argument with the correct device name.&lt;/p&gt;
&lt;p&gt;‚ö†Ô∏è This is very important, as you will lose all the data on the hard drive if you provide the wrong device name. Make sure the device name is the name of the whole SD card as described above, not just a partition. For example: sdd, not sdds1 or sddp1; mmcblk0, not mmcblk0p1.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dd&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bs&lt;/span&gt;=&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;M &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;=&lt;span style=&#34;color:#ae81ff&#34;&gt;2020-08-20&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;raspios&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;buster&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;armhf&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;lite&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sda&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;conv&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;fsyn&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can add the flags &lt;code&gt;status=progress conv=fsync&lt;/code&gt; to see the progress:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dd&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bs&lt;/span&gt;=&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;M &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;=&lt;span style=&#34;color:#ae81ff&#34;&gt;2020-08-20&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;raspios&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;buster&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;armhf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sda&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;progress&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;conv&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;fsync&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If it&amp;rsquo;s zipped we can concat the unzip and the dd commands with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;unzip&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-08-20&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;raspios&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;buster&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;armhf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;zip&lt;/span&gt; | &lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dd&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sda&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bs&lt;/span&gt;=&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;M &lt;span style=&#34;color:#a6e22e&#34;&gt;conv&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;fsync&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After that, we have our OS installed in the microSD so we have our Raspberry Pi ready! üôå&lt;/p&gt;
&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;
&lt;p&gt;Now is the moment to insert the microSD back to the raspberry, connect it to your screen and plug it in.&lt;/p&gt;
&lt;p&gt;In our TV appears something like that:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/raspberry-media-player/installation.jpg&#34; alt=&#34;installation&#34;&gt;&lt;/p&gt;
&lt;p&gt;As you can notice on the bottom I already logged in. The user is &lt;code&gt;pi&lt;/code&gt; and the default password &lt;code&gt;raspberry&lt;/code&gt;. It is super recommended to change the password the first time you log in.&lt;/p&gt;
&lt;h2 id=&#34;enable-ssh&#34;&gt;Enable ssh&lt;/h2&gt;
&lt;p&gt;Next step is to enable the ssh connection as we want to manage the Raspberry from our laptop, not from the TV so first is reading the &lt;a href=&#34;https://www.raspberrypi.org/documentation/remote-access/ssh/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Second is use the &lt;code&gt;systemctl&lt;/code&gt; to start and enable the service:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ssh&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;enable&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ssh&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can check if its working with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ssh&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And it will appear something like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;‚óè &lt;span style=&#34;color:#a6e22e&#34;&gt;ssh&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt; - &lt;span style=&#34;color:#a6e22e&#34;&gt;OpenBSD&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Secure&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Shell&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;Loaded&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;loaded&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;/lib/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;systemd&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/system/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ssh&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;enabled&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;vendor&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;preset&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;enabled&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;Active&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;active&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;running&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;since&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;XXX&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;     &lt;span style=&#34;color:#a6e22e&#34;&gt;Docs&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;man&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;sshd&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;           &lt;span style=&#34;color:#a6e22e&#34;&gt;man&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;sshd_config&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Main&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PID&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;440&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;sshd&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Tasks&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;limit&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2063&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;CGroup&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;/system.slice/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ssh&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;           ‚îî‚îÄ&lt;span style=&#34;color:#ae81ff&#34;&gt;440&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/usr/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sbin&lt;/span&gt;/&lt;span style=&#34;color:#a6e22e&#34;&gt;sshd&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;D&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After that, we need to discover the &lt;code&gt;IP&lt;/code&gt; of our Raspberry. For that we can use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ifconfig&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And something like that will appear:
&lt;img src=&#34;https://charly3pins.dev/images/raspberry-media-player/ifconfig.jpg&#34; alt=&#34;ifconfig&#34;&gt;&lt;/p&gt;
&lt;p&gt;In my case you can see it is &lt;code&gt;192.168.1.131&lt;/code&gt;, so I will use that as reference; yours probably will be different because it depends on your network.&lt;/p&gt;
&lt;p&gt;Now we can go to our laptop and connect via ssh:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ssh&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pi&lt;/span&gt;@&lt;span style=&#34;color:#ae81ff&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;131&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It will ask the password but we already know which one is because we logged in in the Raspberry directly (remember you change it üòú).&lt;/p&gt;
&lt;h2 id=&#34;config-an-usb-drive-as-media-storage&#34;&gt;Config an USB Drive as media storage&lt;/h2&gt;
&lt;p&gt;First we want to update and have the latest dependencies, so type:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;upgrade&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I decided to use an USB drive formatted as ExFAT since I only work with Linux. Plug the USB drive to the Raspberry Pi and restart it.&lt;/p&gt;
&lt;p&gt;From the terminal execute:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fdisk&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;l&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Which will list all the partitions recognised by the system. Identify the one associated with the external drive. In my case it was:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Disk&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/dev/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sda&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TiB&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2000398934016&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bytes&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3907029168&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sectors&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Disk&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;External&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;USB&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Units&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;sectors&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; * &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Sector&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;size&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;logical&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/physical): 512 bytes /&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;I&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/O size (minimum/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;optimal&lt;/span&gt;): &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bytes&lt;/span&gt; / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Disklabel&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;dos&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Disk&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;identifier&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;x&lt;span style=&#34;color:#ae81ff&#34;&gt;0072438&lt;/span&gt;b&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Device&lt;/span&gt;     &lt;span style=&#34;color:#a6e22e&#34;&gt;Boot&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Start&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;End&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Sectors&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;Size&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Id&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Type&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sda1&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3907028991&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3907026944&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;T  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HPFS&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/NTFS/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;exFAT&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now install the exFAT drivers, otherwise the file-system will not be recognised:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;exfat&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;fuse&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And create the directory where the disk will be mounted:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mkdir&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/media/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;storage&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we can mount the disk with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mount&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/dev/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sda1&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/media/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;storage&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;‚ö†Ô∏è Remember to replace &lt;code&gt;sda1&lt;/code&gt; with the actual device name that you found with sudo fdisk -l.&lt;/p&gt;
&lt;p&gt;To unmount it we can use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;umount&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/media/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;storage&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ideally, we want the drive to be always connected, so we configure the mount at boot and save to type those commands every time we restart the Raspberry.&lt;/p&gt;
&lt;p&gt;First we find the identifier:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;blkid&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In my case the result was:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mmcblk0p1&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;LABEL_FATBOOT&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;boot&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;LABEL&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;boot&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UUID&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4AD7-B4D5&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TYPE&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vfat&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PARTUUID&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;d5603eaf-01&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mmcblk0p2&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;LABEL&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rootfs&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UUID&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2887d26c-6ae7-449d-9701-c5a4018755b0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TYPE&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ext4&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PARTUUID&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;d5603eaf-02&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mmcblk0&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;PTUUID&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;d5603eaf&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PTTYPE&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dos&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sda1&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;UUID&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1200CB0C6CE045EE&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TYPE&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ntfs&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PTTYPE&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;atari&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PARTUUID&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0072438b-01&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;What we are interested in is the UUID of our external drive. In my case that&amp;rsquo;s &lt;code&gt;1200CB0C6CE045EE&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now we can edit the file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nano&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fstab&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And add this line at the bottom:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;UUID=1200CB0C6CE045EE /media/storage exfat defaults,auto,umask=000,users,rw 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;‚ö†Ô∏è Don&amp;rsquo;t forget to replace the UUID with yours.&lt;/p&gt;
&lt;h2 id=&#34;transmission-bittorrent&#34;&gt;Transmission BitTorrent&lt;/h2&gt;
&lt;p&gt;Next step is to have a BitTorrent client to download the torrents (only legal ones of course) and for that we would need to install &lt;code&gt;Transmission&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Execute the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;y&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;transmission&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;daemon&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;transmission&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;cli&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;transmission&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;common&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;New we need to stop the demon to apply changes to the configuration that will allow us to manage it remotely:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;transmission&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;daemon&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;stop&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vi&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;transmission&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;daemon&lt;/span&gt;/&lt;span style=&#34;color:#a6e22e&#34;&gt;settings&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;``&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Look&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rpc&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;whitelist&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rpc&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;whitelist&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;enabled&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;make&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sure&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;they&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;look&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;like&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;this&lt;/span&gt;:&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;```&lt;span style=&#34;color:#a6e22e&#34;&gt;vim&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;rpc-whitelist&amp;#34;: &amp;#34;127.0.0.1,192.168.*.*&amp;#34;,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;rpc-whitelist-enable&amp;#34;: &amp;#34;true&amp;#34;,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Please note that this is assuming that your internal network works on &lt;code&gt;192.168.0.1/24&lt;/code&gt;. If otherwise please change the value accordingly.&lt;/p&gt;
&lt;p&gt;Also, we can modify download-dir and incomplete-dir to point at the external USB drive, for example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;download-dir&amp;#34;: &amp;#34;/media/storage/downloads&amp;#34;,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;incomplete-dir&amp;#34;: &amp;#34;/media/storage/.tmp&amp;#34;,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;incomplete-dir-enabled&amp;#34;: true,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Please make sure that the directories exist on your external USB drive (we&amp;rsquo;ve created on the previous section).&lt;/p&gt;
&lt;p&gt;Set up the user and password:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;rpc-password&amp;#34;: &amp;#34;superSecret&amp;#34;,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;rpc-port&amp;#34;: 9091,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;rpc-url&amp;#34;: &amp;#34;/transmission/&amp;#34;,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;rpc-username&amp;#34;: &amp;#34;gopher&amp;#34;,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next step is to change the peer-port because sometimes your provider will block the default one. You can select the one you want between the range 49152-65535. In my case I decided to use the 51228. So find the next line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;peer-port&amp;#34;: 51413,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And change it for the decided port:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;peer-port&amp;#34;: 51228,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Also you can manage the download/upload speed from the configuration editing the following lines:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;speed-limit-down&amp;#34;: 3000,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;speed-limit-down-enabled&amp;#34;: true,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;speed-limit-up&amp;#34;: 900,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;speed-limit-up-enabled&amp;#34;: true,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we can start the service again:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;transmission&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;daemon&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The web interface is already available at the address http://192.168.1.131:9091 (replace the IP address with the one used by the Raspberry Pi in your network).&lt;/p&gt;
&lt;p&gt;You can login using both username and password as &lt;code&gt;transmission&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;install-sonarr&#34;&gt;Install Sonarr&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Sonarr/Sonarr&#34;&gt;Sonarr&lt;/a&gt; is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.&lt;/p&gt;
&lt;p&gt;We need to install dependencies like &lt;code&gt;libmono-cil-dev&lt;/code&gt; and &lt;code&gt;mono 3.10&lt;/code&gt;. I used this &lt;a href=&#34;https://www.htpcguides.com/install-sonarr-raspberry-pi-mono-310/&#34;&gt;link&lt;/a&gt; as a reference. For that we need to type:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;libmono&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;cil&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;dev&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;wget&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sourceforge&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;net&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/projects/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bananapi&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/files/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mono_3&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;armhf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;deb&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dpkg&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mono_3&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;armhf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;deb&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After that, we can install Sonarr:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;key&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;adv&lt;/span&gt; --&lt;span style=&#34;color:#a6e22e&#34;&gt;keyserver&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;keyserver&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ubuntu&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt; --&lt;span style=&#34;color:#a6e22e&#34;&gt;recv&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;keys&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;xA&lt;span style=&#34;color:#ae81ff&#34;&gt;236&lt;/span&gt;C&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;F&lt;span style=&#34;color:#ae81ff&#34;&gt;409091&lt;/span&gt;A&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;ACA&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;CBEBFF&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;B&lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;D&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;B&lt;span style=&#34;color:#ae81ff&#34;&gt;78493&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deb http://apt.sonarr.tv/ master main&amp;#34;&lt;/span&gt; | &lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tee&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/sources.list.d/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sonarr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nzbdrone&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;chown&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;R&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pi&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;pi&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/opt/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NzbDrone&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;autostart-script&#34;&gt;Autostart script&lt;/h3&gt;
&lt;p&gt;We need to create the file &lt;code&gt;/etc/systemd/system/nzbdrone.service&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nano&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;systemd&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/system/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nzbdrone&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And put inside:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;Unit&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Description&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;Sonarr&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Daemon&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;After&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;network&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;Service&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;pi&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Group&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;pi&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Type&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;simple&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ExecStart&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;/usr/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bin&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/mono /&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;opt&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/NzbDrone/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NzbDrone&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exe&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;nobrowser&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;TimeoutStopSec&lt;/span&gt;=&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;KillMode&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;process&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Restart&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;failure&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;Install&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;WantedBy&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;multi&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can start, check the status and enable if the service is working with the following commands respectively:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nzbdrone&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nzbdrone&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;enable&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nzbdrone&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The web interface is already available at the address http://192.168.1.131:8989 (replace the IP address with the one used by the Raspberry Pi in your network).&lt;/p&gt;
&lt;h2 id=&#34;install-jackett&#34;&gt;Install Jackett&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Jackett/Jackett&#34;&gt;Jackett&lt;/a&gt; works as a proxy server: it translates queries from apps (Sonarr, Radarr, SickRage, CouchPotato, Mylar, Lidarr, DuckieTV, qBittorrent, Nefarious etc.) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping &amp;amp; translation logic - removing the burden from other apps.&lt;/p&gt;
&lt;p&gt;We start downloading the latest Jackett release:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;wget&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;q&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;github&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/Jackett/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Jackett&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/releases/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;latest&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;O&lt;/span&gt; - | &lt;span style=&#34;color:#a6e22e&#34;&gt;grep&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;E&lt;/span&gt; \&lt;span style=&#34;color:#e6db74&#34;&gt;/tag\/&lt;/span&gt; | &lt;span style=&#34;color:#a6e22e&#34;&gt;awk&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;F&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[&amp;gt;&amp;lt;]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $3}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or if you already know the release:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;wget&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;q&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;github&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/Jackett/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Jackett&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/releases/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;download&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/v0.16.1937/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Jackett&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Binaries&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;LinuxARM32&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;tar&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;gz&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then we need to unzip the file and move it to the correct path:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tar&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;zxvf&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Jackett&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Binaries&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;LinuxARM32&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;tar&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;gz&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mv&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Jackett&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/opt/&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Change ownership of Jackett to the main user of the Raspberry Pi that in our case is &lt;code&gt;pi&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;chown&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;R&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pi&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;pi&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/opt/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Jackett&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;autostart-script-1&#34;&gt;Autostart script&lt;/h3&gt;
&lt;p&gt;We need to create the file &lt;code&gt;/etc/systemd/system/jackett.service&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nano&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;systemd&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/system/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;jackett&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And put inside:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;Unit&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Description&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;Jackett&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Daemon&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;After&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;network&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;Service&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;SyslogIdentifier&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;jackett&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Restart&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;always&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;RestartSec&lt;/span&gt;=&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Type&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;simple&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;pi&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Group&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;pi&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;WorkingDirectory&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;/opt/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Jackett&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ExecStart&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;/opt/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Jackett&lt;/span&gt;/&lt;span style=&#34;color:#a6e22e&#34;&gt;jackett&lt;/span&gt; --&lt;span style=&#34;color:#a6e22e&#34;&gt;NoRestart&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;TimeoutStopSec&lt;/span&gt;=&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;Install&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;WantedBy&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;multi&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can start, check the status and enable if the service is working with the following commands respectively:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;jackett&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;jackett&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;enable&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;jackett&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The web interface is already available at the address http://192.168.1.131:9117 (replace the IP address with the one used by the Raspberry Pi in your network).&lt;/p&gt;
&lt;h2 id=&#34;install-bazarr&#34;&gt;Install Bazarr&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/morpheus65535/bazarr&#34;&gt;Bazarr&lt;/a&gt; is a companion application to Sonarr and Radarr. It manages and downloads subtitles based on your requirements. You define your preferences by TV shows or movies and Bazarr takes care of everything for you.&lt;/p&gt;
&lt;p&gt;As a dependency for it we would need to install &lt;code&gt;python3&lt;/code&gt;. So first of all let&amp;rsquo;s do that:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;python3&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;idle3&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next we need to have git to download the repo and pip for manage the package installation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;python3&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;pip&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;python3&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;distutils&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now time for install the dependencies for Bazarr:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;libxml2&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;dev&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;libxslt1&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;dev&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;python3&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;libxml2&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;python3&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;lxml&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;unrar&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;free&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ffmpeg&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;libatlas&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;base&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;dev&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With that we are ready to install Bazarr in our Raspberry. We need to clone the repo directly from GitHub using git and we do directly to the destination folder &lt;code&gt;opt/bazarr&lt;/code&gt; typing the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clone&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;github&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/morpheus65535/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bazarr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/opt/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bazarr&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then we need to go to that folder and install the requirements defined inside it with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cd&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/opt/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bazarr&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;python3&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pip&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;requirements&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;txt&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;‚ÑπÔ∏è NOTE: Don&amp;rsquo;t worry about &lt;code&gt;lxml&lt;/code&gt; not being installed at this step, you have installed the module through apt-get anyway.&lt;/p&gt;
&lt;p&gt;Change the ownership to &lt;code&gt;pi&lt;/code&gt; user:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;chown&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;R&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pi&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;pi&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/opt/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bazarr&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And we can start and test Bazarr:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;python3&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bazarr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;py&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After the messages of starting Bazarr and configuring it, check if it works in http://192.168.1.131:6767/.&lt;/p&gt;
&lt;h3 id=&#34;connect-with-sonarr&#34;&gt;Connect with Sonarr&lt;/h3&gt;
&lt;p&gt;Next step is to connect it with Sonarr. The &lt;a href=&#34;https://github.com/morpheus65535/bazarr/wiki/Setup-Guide&#34;&gt;official documentation&lt;/a&gt; is super straightforward and easy to follow, so I will not put it here. Just one thing that is not clear enough at least for me and it&amp;rsquo;s about Sonarr API Key and it&amp;rsquo;s location, so as a tip I will put here that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sonarr API Key is under &lt;code&gt;Settings/General/Security&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;autostart-script-2&#34;&gt;Autostart script&lt;/h3&gt;
&lt;p&gt;We need to create the file &lt;code&gt;/etc/systemd/system/bazarr.service&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nano&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;systemd&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/system/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bazarr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And put inside:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;Unit&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Description&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;Bazarr&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Daemon&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;After&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;syslog&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;network&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;# &lt;span style=&#34;color:#a6e22e&#34;&gt;After&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;syslog&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;network&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sonarr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;radarr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;Service&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;WorkingDirectory&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;/opt/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bazarr&lt;/span&gt;/&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;pi&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Group&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;pi&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;UMask&lt;/span&gt;=&lt;span style=&#34;color:#ae81ff&#34;&gt;0002&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Restart&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;failure&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;RestartSec&lt;/span&gt;=&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Type&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;simple&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ExecStart&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;/usr/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bin&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/python3 /&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;opt&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/bazarr/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bazarr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;py&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;KillSignal&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;SIGINT&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;TimeoutStopSec&lt;/span&gt;=&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;SyslogIdentifier&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;bazarr&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ExecStartPre&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;/bin/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sleep&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;Install&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;WantedBy&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;multi&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can start, check the status and enable if the service is working with the following commands respectively:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bazarr&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bazarr&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;enable&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bazarr&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The web interface is already available at the address http://192.168.1.131:6767 (replace the IP address with the one used by the Raspberry Pi in your network).&lt;/p&gt;
&lt;h2 id=&#34;install-plex&#34;&gt;Install Plex&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.plex.tv/&#34;&gt;Plex&lt;/a&gt; brings together all the media that matters to you. Your personal collection will look beautiful alongside stellar streaming content. Enjoy Live TV &amp;amp; DVR, a growing catalog of great web shows, news, and podcasts. It&amp;rsquo;s finally possible to enjoy all the media you love in a single app, on any device, no matter where you are.&lt;/p&gt;
&lt;p&gt;First of all we need to add a new repository and it&amp;rsquo;s key. This will add to the Raspberry&amp;rsquo;s OS the repositories where we need to download the installation and the future updates. It&amp;rsquo;s like a list of links where the system reads automatically the programs it needs for the installation and the updates.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;deb&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;downloads&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;plex&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;tv&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/repo/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;deb&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt; | &lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tee&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/sources.list.d/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;plexmediaserver&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next step is adding the signatures of the repos. The system has to be sure that the repos we added manually are correct and they don&amp;rsquo;t have malware. For that we need to add the key and helps system to verify those repos.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;curl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;downloads&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;plex&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;tv&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/plex-keys/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;PlexSign&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;key&lt;/span&gt; | &lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;key&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can now update our package list and install Plex Media Server:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;plexmediaserver&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can complete the setup opening the following link with your browser:&lt;/p&gt;
&lt;p&gt;The web interface is already available at the address http://192.168.0.10:32400/web (replace the IP address with the one used by the Raspberry Pi in your network).&lt;/p&gt;
&lt;p&gt;When you are requested to add libraries, you should add the download folder of Transmission, in our example &lt;code&gt;/media/storage/downloads&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And simply enjoy your media player with your favourite series üì∫.&lt;/p&gt;
&lt;p&gt;If you are interested also in films you can install &lt;a href=&#34;https://github.com/Radarr/Radarr&#34;&gt;Radarr&lt;/a&gt; which is an independent fork of Sonarr reworked for automatically downloading movies via Usenet and BitTorrent. The project was inspired by other Usenet/BitTorrent movie downloaders such as CouchPotato.&lt;/p&gt;
&lt;p&gt;In a future post I probably try to Dockerize all that setup and will include Radarr, or not&amp;hellip; we will see üßë‚ÄçüöÄ&lt;/p&gt;
&lt;p&gt;I hope you enjoyed it and if you have any doubts please reach me out on any social network!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Understanding Semantic Versioning 2.0 (SemVer)</title>
      <link>https://charly3pins.dev/blog/understanding-semantic-versionin-2.0-semver/</link>
      <pubDate>Tue, 20 Oct 2020</pubDate>
      
      <guid>https://charly3pins.dev/blog/understanding-semantic-versionin-2.0-semver/</guid>
      <description>What semantic versioning is? Why is it important to use it in your projects as a developer? What does it mean for a user that uses your library?</description>
      <content>&lt;p&gt;When you want to use a library in your project you probably noticed that you need to specify a version. Most of the time those versions are formatted like 3 numbers separated with dots between them. That format is indicative that the library is using the &lt;a href=&#34;https://semver.org&#34;&gt;Semantic Versioning&lt;/a&gt; aka SemVer. That document specifies the format and the way of labeling your projects during all the life-cycle of it. It is just a convention so you can define the version number the way you want it to be, but the truth is that other developers across all industries agreed on using it and it became a standard for versioning.&lt;/p&gt;
&lt;p&gt;The goal of it is to have different versions of your package following the rule that each time you update the package, you update the version. With that what you  achieve is to have an unique name and version for each public package. For using SemVer you should declare a public API. That is because the versioning proposed is based on the changes against the previous version of the API, so if you don&amp;rsquo;t specify one (even coded or just documented) is not possible to apply those rules.&lt;/p&gt;
&lt;p&gt;The format of the SemVer is as mentioned before 3 numbers separated with a dot between them:
&lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The way of incrementing each number is described in the document. As a summary:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The new features with incompatible behaviour versions (breaks the API) increments the MAJOR;&lt;/li&gt;
&lt;li&gt;The new features backwards-compatible (does not break the API) increments the MINOR;&lt;/li&gt;
&lt;li&gt;The bug fixes increments the PATCH;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NOTE: The initial development uses a major version 0.
NOTE2: When the MINOR is increased the PATCH is reseted to 0; When the MAJOR is increased the MINOR and the PATCH are reset to 0.&lt;/p&gt;
&lt;p&gt;As a special case you can use the pre-release versions. They are denoted appending a hyphen and the globally accepted following strings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;alpha;&lt;/li&gt;
&lt;li&gt;beta;&lt;/li&gt;
&lt;li&gt;rc (release candidates);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Followed by the version number necessary. So the pre-release versions should be following a similar order like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.0.0-alpha&lt;/li&gt;
&lt;li&gt;1.0.0-alpha-1&lt;/li&gt;
&lt;li&gt;1.0.0-beta&lt;/li&gt;
&lt;li&gt;1.0.0-beta.2&lt;/li&gt;
&lt;li&gt;1.0.0-beta.10&lt;/li&gt;
&lt;li&gt;1.0.0-rc.1&lt;/li&gt;
&lt;li&gt;1.0.0-rc.40&lt;/li&gt;
&lt;li&gt;1.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NOTE: A publicly released API starts at 1.0.0.&lt;/p&gt;
&lt;p&gt;When you want to use the SemVer you can specify an exact version or not. For that you can use the following tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you want an exact version, you indicate the dependency with: X.Y.Z;&lt;/li&gt;
&lt;li&gt;If you want to use the current version or greater ones even with breaking changes on the API you can use the &lt;code&gt;&amp;gt;&lt;/code&gt; like: &amp;gt;X.Y.Z;&lt;/li&gt;
&lt;li&gt;If you want to have the current version or updated ones but with backward-compatibilities you can use the &lt;code&gt;^&lt;/code&gt; like: ^X.Y.Z (where X is fixed);&lt;/li&gt;
&lt;li&gt;If you want to have the current version or updated ones only with bug fixes with minor-level changes you can use the &lt;code&gt;~&lt;/code&gt; like: ~X.Y.Z (where X and Y are fixed);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So after reading this article as a developer using another&amp;rsquo;s library you can know what type of changes they did when presenting to you the new version following the rules described above:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New version 0.2.3 ‚Üí The changes might be just bug fixes;&lt;/li&gt;
&lt;li&gt;New version 0.5.0 ‚Üí Some functionalities added but backwards-compatible with the API;&lt;/li&gt;
&lt;li&gt;New version 5.0.0 ‚Üí There might be a problem because it introduced breaking changes with the API;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a conclusion the benefit of using SemVer against not:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clearer compatibility/dependencies;&lt;/li&gt;
&lt;li&gt;Encourages well-defined APIs;&lt;/li&gt;
&lt;li&gt;Makes upgrade decisions clearer;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Level up your presentations with Go</title>
      <link>https://charly3pins.dev/blog/level-up-your-preseentations-with-go/</link>
      <pubDate>Tue, 06 Oct 2020</pubDate>
      
      <guid>https://charly3pins.dev/blog/level-up-your-preseentations-with-go/</guid>
      <description>Generate easily your presentations with &#34;present&#34;, the tool powered by Go that generates and renders your slides.</description>
      <content>&lt;p&gt;If you&amp;rsquo;re a technical person and you don&amp;rsquo;t like to battle with presentation softwares but you want/need to create one, congratulations! you are in the right place. I know that as software engineers we want to be coding or reading or watching things related with software, architecture or devops but not with presentations. Sometimes we are demanded to present something to other team members, to the product owners or even scarier, to the management team!&lt;/p&gt;
&lt;p&gt;For that reason I want to introduce you to the Go package &lt;a href=&#34;https://godoc.org/golang.org/x/tools/present&#34;&gt;present&lt;/a&gt;. It&amp;rsquo;s used to create slides in Golang hosted on talks.golang.org or on your private one. I&amp;rsquo;ve used it several times, especially when I want to share something to my colleagues on the team (some code of course), because I don&amp;rsquo;t want to waste time with softwares. I just create the project for the slides, add my slides in markdown, add the images needed and just present them to them. Let&amp;rsquo;s see in detail how it works!&lt;/p&gt;
&lt;p&gt;Assuming you have &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Go installed&lt;/a&gt; and correctly configured, all you need to install is the package with the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;go&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;u&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;golang&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/x/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tools&lt;/span&gt;/&lt;span style=&#34;color:#a6e22e&#34;&gt;present&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Test if it works typing:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;present&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And it should display a message similar to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/10/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Open&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;your&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;web&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;browser&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;visit&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;127&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;3999&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So you can visit the link, and see the local server ready to host your presentations. Awesome or not? Okay, I know you want to display something other than an empty directory, so let&amp;rsquo;s create an example presentation for that.&lt;/p&gt;
&lt;h2 id=&#34;format&#34;&gt;Format&lt;/h2&gt;
&lt;p&gt;Create a directory for your slides:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mkdir&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;go&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;present&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;example&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cd&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;go&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;present&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;example&lt;/span&gt;/&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create your first slide:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vim&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initial&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;slide&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And add the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Learning Go present
6 October 2020

Crash Bandicoot
crash.bandicoot@gmail.com

* Hello World

I&#39;m a slide
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So if you run again the &lt;code&gt;present&lt;/code&gt; command inside your folder and go to the browser again you should be able to see the screen below:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/initial-slide.jpeg&#34; alt=&#34;initial slide&#34;&gt;&lt;/p&gt;
&lt;p&gt;Click on the &lt;code&gt;initial.slide&lt;/code&gt; link and admire your presentation!
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/initial-presentation.jpeg&#34; alt=&#34;initial presentation&#34;&gt;&lt;/p&gt;
&lt;p&gt;As you can see, the first line is the title, the second the date and then it&amp;rsquo;s followed by the author. On the second slide, actually the first one, it appears the title of the slide and the text of that one. The last one displays a gratitude title and your name and contact (email, twitter, etc.) you added in the slide. See it below:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/end-presentation.jpeg&#34; alt=&#34;end presentation&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;legacy-present-syntax&#34;&gt;Legacy Present Syntax&lt;/h2&gt;
&lt;p&gt;It supports Markdown but here we will explore the &lt;a href=&#34;https://godoc.org/golang.org/x/tools/present#hdr-Legacy_Present_Syntax&#34;&gt;Legacy Present Syntax&lt;/a&gt;, as the Markdown has a lot of resources where you can check. So let&amp;rsquo;s explore a bit the features that &lt;code&gt;present&lt;/code&gt; offers for formatting and displaying text in our slides.&lt;/p&gt;
&lt;p&gt;First is the classical options for formatting the text:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;normal vs `highlighted`
*bold*
_italic_
*multiple*bold*text*
_multiple_italic_text_
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And the result:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/text-formatting.jpeg&#34; alt=&#34;text formatting&#34;&gt;&lt;/p&gt;
&lt;p&gt;Also you can add a list:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Grocery list for the gopher:

- go routines
- garbage collector
- Rust
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/text-formatting-list.jpeg&#34; alt=&#34;text formatting list&#34;&gt;&lt;/p&gt;
&lt;p&gt;Or different level of subsections like that:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;** Subsection

Gopher is diving the subsection.

*** Sub-subsection

Another Gopher is diving more into the sub-subsection!
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And you will see the slide like this craziness:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/text-formatting-subsections.jpeg&#34; alt=&#34;text formatting subsections&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/gophers.gif&#34; alt=&#34;gophers&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;command-invocations&#34;&gt;Command Invocations&lt;/h2&gt;
&lt;p&gt;Apart from text formatting there are a special &lt;a href=&#34;https://godoc.org/golang.org/x/tools/present#hdr-Command_Invocations&#34;&gt;command invocations&lt;/a&gt; that you can invoke to take your presentation to another level.&lt;/p&gt;
&lt;h3 id=&#34;images--videos&#34;&gt;images &amp;amp; videos&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;.image&lt;/code&gt; command injects a picture in your slide. It accepts 1 or 3 arguments (name, height, width). Name is mandatory, other two must be present or substituted with an &lt;code&gt;_&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.image /images/gopher.jpeg 200 200
.image /images/gopher.jpeg _ 300
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/images.jpeg&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;
&lt;p&gt;Like the pictures, you can do the same with a video using the &lt;code&gt;.video&lt;/code&gt; command. It accepts 2 or 4 arguments (name, file content-type, height, width). Name and file content-type are mandatories, other two must be present or substituted with and &lt;code&gt;_&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.video videos/gopher-dance.mp4 video/mp4 400 600
.video videos/gopher-dance.mkv video/mkv 500 _
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Similar to the images, it also has the &lt;code&gt;.background&lt;/code&gt; command to set the background image for a slide. It has only one argument as the file name of the image.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.background images/susan.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;links&#34;&gt;links&lt;/h3&gt;
&lt;p&gt;If you need to insert a link in your presentation you can use the &lt;code&gt;.link&lt;/code&gt; command. It accepts 1 or 2 arguments (HTTP url, text label). HTTP url is mandatory, the second one is optional.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.link https://charly3pins.dev charly3pins website
.link https://charly3pins.dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/links.jpeg&#34; alt=&#34;links&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;code&#34;&gt;code&lt;/h3&gt;
&lt;p&gt;The best command imo is the &lt;code&gt;.code&lt;/code&gt; one. It allows you to put code extracting them from the source files and injecting them as HTML-escaped &lt;!-- raw HTML omitted --&gt; blocks. It accepts one argument as the file name followed by an optional address that specifies what section of the file to display.&lt;/p&gt;
&lt;p&gt;For example taking the Hello world in Go as a source code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello world!&amp;#34;&lt;/span&gt;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We need to specify as:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.code hello.go
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And it will show like that:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/code.jpeg&#34; alt=&#34;code&#34;&gt;&lt;/p&gt;
&lt;p&gt;But what happens if you want to highlight some part of the code? Don&amp;rsquo;t worry, present has that &amp;ldquo;present&amp;rdquo; and you can add those &amp;ldquo;optional addresses&amp;rdquo; we commented below for that. So, modify the code like that to highlight the &lt;code&gt;Printf&lt;/code&gt; call:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello world!&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;// HL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And use the same command in your slide:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.code hello-hl.go
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To see the code highlighted:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/code-hl.jpeg&#34; alt=&#34;code-hl&#34;&gt;&lt;/p&gt;
&lt;p&gt;One step further! If you wanna show only a part of your code, for example hide the package and the imports of your file, you can also add the following snippets:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;//START OMIT
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello world!&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;// HL
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}
&lt;span style=&#34;color:#75715e&#34;&gt;//END OMIT
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Again use the same command but adding the following snippet:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.code hello-hl-partial.go /START OMIT/,/END OMIT/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And see the code partially displayed:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/code-hl-partial.jpeg&#34; alt=&#34;code-hl-partial&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;play&#34;&gt;play&lt;/h4&gt;
&lt;p&gt;That command is superpowerful in order to help you present some code and highlight or hide some parts. But the show must go on, and the best part is the next one. The command &lt;code&gt;.play&lt;/code&gt; is like the &lt;code&gt;code&lt;/code&gt; one but it puts a button on the dispalyed source and you can run your program from the browser! Is it magic or not?
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/magic.gif&#34; alt=&#34;magic&#34;&gt;&lt;/p&gt;
&lt;p&gt;So let&amp;rsquo;s use the same source-code that we are using and just add the new command to the slides like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.play hello.go
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It will appear like the &lt;code&gt;code&lt;/code&gt; one but if you notice on the right bottom corner, it appears a small &lt;code&gt;Run&lt;/code&gt; button.
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/code-play.jpeg&#34; alt=&#34;code-play&#34;&gt;&lt;/p&gt;
&lt;p&gt;Running the code will display a small black window on the screen displaying the output of the code:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/code-played.jpeg&#34; alt=&#34;code-played&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;presenter-notes&#34;&gt;Presenter Notes&lt;/h2&gt;
&lt;p&gt;Last but not least is an interesting thing that they provide also. It&amp;rsquo;s well known that in PowerPoint or similar programs you can add your notes only visible for you when presenting the presentation and they are very useful sometimes. So &lt;code&gt;present&lt;/code&gt; has that in consideration as well and you can add your presentation notes just adding a &lt;code&gt;:&lt;/code&gt; on the beginning of the sentence and that text will be treated as a presenter note.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;* Presenter notes

The gophers like to eat a lot.

: they eat more than half their body weight in food each day

They eat basically plants.

: typically gnaws the roots of a plant just beneath the soil, so the damage isn‚Äôt seen
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/present-notes.jpeg&#34; alt=&#34;present-notes&#34;&gt;&lt;/p&gt;
&lt;p&gt;As you can see the notes aren&amp;rsquo;t present there, so WHY? Because you need to run the presentation in a &amp;ldquo;presenter&amp;rdquo; like that.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;present&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;notes&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And it should display a message similar to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/10/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Open&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;your&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;web&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;browser&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;visit&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;127&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;3999&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/10/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Notes&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;are&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;enabled&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;press&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;N&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;browser&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;display&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;them&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So if you refresh your browser with the presentation and press &lt;code&gt;N&lt;/code&gt; you will see a popup displaying the notes of each slide on the bottom like that:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/present-notes-popup.jpeg&#34; alt=&#34;present-notes-popup&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;present&lt;/code&gt; tool is super useful for technical presentations, especially in Go. It has its limitations like the format of the slides and the image positioning sometimes tricky, but in general is a great package and for me is the standard for all my presentations. If you wanna dick more in detail about that package check the &lt;a href=&#34;https://godoc.org/golang.org/x/tools/present&#34;&gt;official documentation&lt;/a&gt; and also I would recommend the &lt;a href=&#34;https://talks.golang.org/2012/insidepresent.slide#1&#34;&gt;presentation&lt;/a&gt;: &lt;code&gt;Inside the &amp;quot;present&amp;quot; tool&lt;/code&gt; by Andrew Gerrand. Also I&amp;rsquo;ve uploaded the source code for this tutorial on &lt;a href=&#34;https://github.com/charly3pins/go-present-example&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Git custom commit messages</title>
      <link>https://charly3pins.dev/blog/git-custom-commit-messages/</link>
      <pubDate>Tue, 10 Mar 2020</pubDate>
      
      <guid>https://charly3pins.dev/blog/git-custom-commit-messages/</guid>
      <description>Generate custom commit messages for your repo and standardize your commits log.</description>
      <content>&lt;p&gt;I&amp;rsquo;ve been using the &lt;a href=&#34;https://github.com/walmartdigital/commit-message-formatter&#34;&gt;CMF&lt;/a&gt; tool for the last one year and I think its simplicity is its potential. Basically it is a terminal tool developd in Go by &lt;a href=&#34;https://github.com/walmartdigital&#34;&gt;Walmart Digital&lt;/a&gt; that helps you to standarize the commits log of your projects.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve been using for the last year and a half approximatley and all I can say its very useful. We agreed with the team the configuration we want to use and defined a set of changes that applies in our case. Also we choose the &lt;a href=&#34;https://github.com/walmartdigital/commit-message-formatter#jira-flow&#34;&gt;Jira flow&lt;/a&gt; and we changed the values for the &lt;code&gt;change&lt;/code&gt; adding an emojis to make the commits a bit more funny to check them in the log.&lt;/p&gt;
&lt;p&gt;You can install it via npm:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;npm&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;g&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;go&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;cmf&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or from Go:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;go&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;github&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/walmartdigital/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;commit&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;formatter&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After that, open a terminal and navigate to the root of the project you want to use it. Then type:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cmf&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You will need to select one of the flows and it will create a &lt;code&gt;.cmf.yaml&lt;/code&gt; file with the template of the selected one. You can edit that file in the way you want. The unique condition is that any variable you wanna use have to be defined using &lt;code&gt;{{}}&lt;/code&gt;. Example: &lt;code&gt;{{CHANGE}}&lt;/code&gt; it will prompt you asking the CHANGE you did and displaying the options you defined in the template.&lt;/p&gt;
&lt;p&gt;Here is the &lt;code&gt;.cmf.yaml&lt;/code&gt; file that I&amp;rsquo;m using on this site:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PROMPT:
    - KEY: &amp;quot;CHANGE&amp;quot;
      LABEL: &amp;quot;Type of change&amp;quot;
      OPTIONS:
        - VALUE: &amp;quot;feat :sparkles:&amp;quot;
          DESC: &amp;quot;A new feature&amp;quot;
        - VALUE: &amp;quot;fix :bug:&amp;quot;
          DESC: &amp;quot;A bug fix&amp;quot;
        - VALUE: &amp;quot;test :rotating_light:&amp;quot;
          DESC: &amp;quot;Adding missing tests or correcting wrong ones&amp;quot;
        - VALUE: &amp;quot;style :lipstick:&amp;quot;
          DESC: &amp;quot;A code change to improve clean code&amp;quot;
        - VALUE: &amp;quot;build-ci :construction_worker_man:&amp;quot;
          DESC: &amp;quot;Changes that affect the build system and/or CI configuration files and scripts&amp;quot;
        - VALUE: &amp;quot;refactor :hammer:&amp;quot;
          DESC: &amp;quot;A code change&amp;quot;
        - VALUE: &amp;quot;docs :books:&amp;quot;
          DESC: &amp;quot;Documentation only changes&amp;quot;
        - VALUE: &amp;quot;chore :card_index:&amp;quot;
          DESC: &amp;quot;Changes that don&#39;t fit any of the options above&amp;quot;
    - KEY: &amp;quot;MESSAGE&amp;quot;
      LABEL: &amp;quot;Commit message&amp;quot;
TEMPLATE: &amp;quot;{{CHANGE}}: {{MESSAGE}}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;</content>
    </item>
    
    <item>
      <title>Hugo&#39;s content and templates managing</title>
      <link>https://charly3pins.dev/blog/hugo-content-and-templates-managing/</link>
      <pubDate>Sun, 08 Mar 2020</pubDate>
      
      <guid>https://charly3pins.dev/blog/hugo-content-and-templates-managing/</guid>
      <description>How to organize your content and create your templates to get maximum value from Hugo.</description>
      <content>&lt;p&gt;After long time without writing&amp;hellip; I&amp;rsquo;m back!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/hugo-content-templates-managing/im-back-terminator.jpg&#34; alt=&#34;I&amp;rsquo;m back&#34;&gt;&lt;/p&gt;
&lt;p&gt;I was planning to rebuild my site and start creating content again but never found the time until now.&lt;/p&gt;
&lt;p&gt;I wanted to do my theme from scratch instead of using a predefined &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;theme&lt;/a&gt;, so I had to learn how the templating and the content managing is done in Hugo.&lt;/p&gt;
&lt;p&gt;Once I did that process, I want to sum up the most important things that I consider you have to know if you wanna do your own theme like I did (this site is the prove of that!).&lt;/p&gt;
&lt;h2 id=&#34;content-management&#34;&gt;Content management&lt;/h2&gt;
&lt;p&gt;First of all let&amp;rsquo;s talk about the &lt;a href=&#34;https://gohugo.io/content-management/organization/&#34;&gt;content organization&lt;/a&gt; in Hugo.&lt;/p&gt;
&lt;p&gt;All the content you wanna have in your site have to be inside the &lt;code&gt;content/&lt;/code&gt; directory. You simply put your posts inside &lt;code&gt;content/posts&lt;/code&gt; and your description in &lt;code&gt;content/about&lt;/code&gt; and Hugo will do the magic for you. Sounds easy right? Continue then.&lt;/p&gt;
&lt;p&gt;Hugo has mainly two types of pages, the &amp;ldquo;unique&amp;rdquo; and the &amp;ldquo;multi&amp;rdquo; ones. The first ones are used for example for an &lt;code&gt;about&lt;/code&gt; or for a &lt;code&gt;faq&lt;/code&gt; or a &lt;code&gt;contribute&lt;/code&gt; or a &lt;code&gt;landing&lt;/code&gt;&amp;hellip; The second ones are used when you want to group under a same category different content. For example your different publications for your &lt;code&gt;posts&lt;/code&gt; or a catalogue for your &lt;code&gt;products&lt;/code&gt;. Being said that, there is another difference that you have to know when you create your different pages.&lt;/p&gt;
&lt;p&gt;The unique ones have to be named like &lt;code&gt;index.md&lt;/code&gt;, the list ones don&amp;rsquo;t. This at the end indicates to Hugo how to manage the content inside the directories and how to generate the URLs to access them. The following schema demonstrates how that works:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;‚îî‚îÄ‚îÄ content
    ‚îî‚îÄ‚îÄ about
    |   ‚îî‚îÄ‚îÄ index.md        (https://mysite.com/about)
    ‚îú‚îÄ‚îÄ posts
    |   ‚îú‚îÄ‚îÄ first-post.md   (https://mysite.com/posts/first-post)
    |   ‚îî‚îÄ‚îÄ second-post.md  (https://mysite.com/posts/second-post)
    |   ‚îî‚îÄ‚îÄ trips
    |       ‚îî‚îÄ‚îÄ pandora.md  (https://mysite.com/posts/trips/pandora)
    ‚îî‚îÄ‚îÄ faq
        ‚îî‚îÄ‚îÄ index.md        (https://mysite.com/faq)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Also there is a possibility to specify the URL using the property &lt;code&gt;slug&lt;/code&gt; like slug=&amp;ldquo;my-custom-url&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;templates-management&#34;&gt;Templates management&lt;/h2&gt;
&lt;p&gt;Now you know how to organize your content, it&amp;rsquo;s time to talk about the &lt;a href=&#34;https://gohugo.io/templates/&#34;&gt;templates&lt;/a&gt;. They are the HTML code that generates the pages of your site. There are a few tricks and tips that I want to share with you like I did with the content on the previous section.&lt;/p&gt;
&lt;p&gt;The different templates have to be placed inside the &lt;code&gt;layouts/&lt;/code&gt; directory. On the root must be the main template called &lt;code&gt;index.html&lt;/code&gt; used to render the homepage. Same way as the content, the templates can be organized in folders if you want to display in different ways the content depending on the route. Like the content, the templates can be organized between unique and multi. Taking the content organization described before, considering that you want to specify different templates for each content folder, one of the possible template organization can be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;‚îî‚îÄ‚îÄ layouts
    ‚îî‚îÄ‚îÄ _default_
    |   ‚îú‚îÄ‚îÄ list.html
    |   ‚îî‚îÄ‚îÄ single.html
    ‚îî‚îÄ‚îÄ posts
        ‚îú‚îÄ‚îÄ list.html
        ‚îî‚îÄ‚îÄ single.html
        ‚îî‚îÄ‚îÄ trips
            ‚îú‚îÄ‚îÄ list.html
            ‚îî‚îÄ‚îÄ single.html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Analyzing in detail, you can see a similar tree like the content but with a particularity that no &lt;code&gt;about&lt;/code&gt; and no &lt;code&gt;faq&lt;/code&gt; folders but it appeared a &lt;code&gt;_default&lt;/code&gt; one. This special folder is used by Hugo to render the pages that doesn&amp;rsquo;t have their own template. On that case the about and the faq, both unique types, will be rendered using the &lt;code&gt;layouts/_default/single.html&lt;/code&gt; template. If the &lt;code&gt;trips&lt;/code&gt; directory didn&amp;rsquo;t exist, the templates used will be the &lt;code&gt;_default&lt;/code&gt; ones.&lt;/p&gt;
&lt;p&gt;At this point you know about content organization and template managing, but you are thinking:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How Hugo know when I want to use a single or a list page?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The answer is depending on the URL and the content there. Using again the example above for the content organization, if you notice the &lt;code&gt;about&lt;/code&gt; contains a &lt;code&gt;index.md&lt;/code&gt; so that indicates Hugo is a &amp;ldquo;unique&amp;rdquo; page. As we didn&amp;rsquo;t defined any particular template for that, the one that will be used is the generic &lt;code&gt;_default/single.thml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On the other hand, inside the &lt;code&gt;posts&lt;/code&gt; there are three posts but no &lt;code&gt;index.md&lt;/code&gt; one, so that indicates Hugo that it&amp;rsquo;s a &amp;ldquo;multi&amp;rdquo; page, so you will use both templates, the &lt;code&gt;list.html&lt;/code&gt; one like an &amp;ldquo;index&amp;rdquo; of your posts, and the &lt;code&gt;single.html&lt;/code&gt; for each post. To render the &lt;code&gt;list.html&lt;/code&gt; one you have to go to the URL of the directory (&lt;a href=&#34;https://mysite.com/posts/)&#34;&gt;https://mysite.com/posts/)&lt;/a&gt;. For the posts (&lt;a href=&#34;https://mysite.com/posts/first-post&#34;&gt;https://mysite.com/posts/first-post&lt;/a&gt;) and (&lt;a href=&#34;https://mysite.com/posts/second-post&#34;&gt;https://mysite.com/posts/second-post&lt;/a&gt;) the template used will be &lt;code&gt;single.html&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;page-variables&#34;&gt;Page variables&lt;/h3&gt;
&lt;p&gt;The Pages have a set of useful variables that are good to know:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Title: the title of the post&lt;/li&gt;
&lt;li&gt;Description: a short/long description of the post&lt;/li&gt;
&lt;li&gt;Content: the body of the post&lt;/li&gt;
&lt;li&gt;ReadingTime: the mins that Hugo autocalculates will take to read the post&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For accessing to the custom parameters that you can create on each post you should access them by name inside the &lt;code&gt;Params&lt;/code&gt; object (Params.yourParam).&lt;/p&gt;
&lt;p&gt;You can display a related posts reading the results of the &lt;code&gt;.Site.RegularPages.Related&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See the full list on the &lt;a href=&#34;https://gohugo.io/variables/page/&#34;&gt;documentation&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;list.html&lt;/code&gt; template is used to display a short description of the posts like a book index with the links to the actual post. For doing that, you have to access to the &lt;code&gt;$.Paginator.Pages&lt;/code&gt; variable and loop over the results. The variables are the same described above with a one more &lt;code&gt;Permalink&lt;/code&gt;, the one you need to use for access the post (and call the &lt;code&gt;single.html&lt;/code&gt; template) for that content.&lt;/p&gt;
&lt;p&gt;Also there are the &lt;code&gt;PrevInSection&lt;/code&gt; and &lt;code&gt;NextInSection&lt;/code&gt; variables for paginate the results.&lt;/p&gt;
&lt;h3 id=&#34;partial-templates&#34;&gt;Partial templates&lt;/h3&gt;
&lt;p&gt;The last tip I want to explain you is that you don&amp;rsquo;t need to repeat all time all the parts of the templates, you can extract the common part in a template and then reuse it anywhere you want. These are the &lt;a href=&#34;https://gohugo.io/templates/partials/&#34;&gt;partial templates&lt;/a&gt;. Its particularity is you need to place that part inside a &lt;code&gt;partials/&lt;/code&gt; directory and call it like &lt;code&gt;{{ partial &amp;quot;name.html&amp;quot; . }}&lt;/code&gt;. They are useful for the &lt;code&gt;header&lt;/code&gt;, &lt;code&gt;footer&lt;/code&gt;, &lt;code&gt;navbar&lt;/code&gt; and other generic parts as well as for a list template that you wanna reuse for your posts and for your trips for example.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Installing Drone 0.8 on Ubuntu 16.04</title>
      <link>https://charly3pins.dev/blog/installing-drone-0.8-on-ubuntu-16.04/</link>
      <pubDate>Wed, 10 Oct 2018</pubDate>
      
      <guid>https://charly3pins.dev/blog/installing-drone-0.8-on-ubuntu-16.04/</guid>
      <description>Simple post explaining how to install Drone on Ubuntu 16.04 server.</description>
      <content>&lt;p&gt;I have to admit that I never liked the systems part of the development process. I always though that it was a job in a dark and creppy place, full of freaks doing a rare things. This vision completely changed when I started using &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;. On this point I realized that all the magic done in the sysadmin part was better than I though and then, I started intereseting more an more on this side.&lt;/p&gt;
&lt;p&gt;Also, at my job we&amp;rsquo;ve started using &lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins&lt;/a&gt; for &lt;a href=&#34;https://www.atlassian.com/continuous-delivery/ci-vs-ci-vs-cd&#34;&gt;CI/CD&lt;/a&gt;, chaning our manual packing-testing-deploying manual task for an automatic process. It was super cool!!! I&amp;rsquo;ve feel very happy because it saves a lot of time and allows you to concentrate in your development tasks not wasting time in the deployment phase. I&amp;rsquo;ve use to spend a lot of time generating my wars, deploying them to sandbox, testing the new features added, deploying again if something need to fix it again and finally releasing a new version of code and deploying to production. All these steps were simiplified with just comitting to a branch and then mergin to master (after testing of course). At this pont I profundized in how the things are being build and deployed, where (in our case in AWS) and how to do that things.&lt;/p&gt;
&lt;p&gt;At this point is when I discovered &lt;a href=&#34;https://drone.io/&#34;&gt;Drone&lt;/a&gt;. Jenkins is really cool and it works, but depending on the project, specially if it&amp;rsquo;s not a Java one, is really bad doing the job (because you need to install a lot of plugins or depenencies to do the task). Also, the configuration of the projects and the installation of Jenkins itself in your server is a bit tedious and complicate. So, Drone is running in a Docker container. You only need to pull the container and run it. AWESOME! It works with a &lt;a href=&#34;http://yaml.org/&#34;&gt;.yaml&lt;/a&gt; defining the server and the agent and thats all. So let&amp;rsquo;s see the steps to install it in an Ubuntu 16.04 server.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;IMPORTANT&lt;!-- raw HTML omitted --&gt;: You need to have SSL certificate in your server because Drone runs under https. Read &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04&#34;&gt;this article&lt;/a&gt; to see how to add SSL in a Nginx with Let&amp;rsquo;s Encrypt.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;First of all you need to pull the drone image.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;docker&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pull&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;drone&lt;/span&gt;/&lt;span style=&#34;color:#a6e22e&#34;&gt;drone&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then create the docker-compose for run it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nano&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;drone&lt;/span&gt;/&lt;span style=&#34;color:#a6e22e&#34;&gt;docker&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;compose&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;yml&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And copy the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;version: &#39;2&#39;

services:
  drone-server:
    image: drone/drone:0.8
    ports:
      - 8000:8000
      - 9000:9000
    volumes:
      - /var/lib/drone:/var/lib/drone/
    restart: always
    env_file:
      - /etc/drone/server.env

  drone-agent:
    image: drone/agent:0.8
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - /etc/drone/agent.env
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;In my case I&amp;rsquo;ve used these ports because I have other things in my Nginx, but you can choose your own ones. I&amp;rsquo;ve also stored the server and agent &lt;code&gt;env&lt;/code&gt; vars in a specific files.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Now it&amp;rsquo;s time to create those files. First we create the server one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nano&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;drone&lt;/span&gt;/&lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;env&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And copy the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Service settings 
DRONE_SECRET=secret_generated_on_command_line
DRONE_HOST=https://yourDroneURL.com

# Registration settings
DRONE_OPEN=false
DRONE_ADMIN=your_github_username

# GitHub Settings
DRONE_GITHUB=true
DRONE_GITHUB_CLIENT=Client_ID_from_GitHub
DRONE_GITHUB_SECRET=Client_Secret_from_GitHub
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For the GitHub clientID and clientSecret, you must register Drone in your GitHub account to obtain them. Follow &lt;a href=&#34;https://developer.github.com/apps/building-oauth-apps/creating-an-oauth-app/&#34;&gt;these instructions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And now the agent:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nano&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;drone&lt;/span&gt;/&lt;span style=&#34;color:#a6e22e&#34;&gt;agent&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;env&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And copy the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DRONE_SECRET=secret_generated_on_command_line
DRONE_SERVER=drone-server:9000
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To generate the &lt;code&gt;DRONE_SECRET&lt;/code&gt; you can ype the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;LC_ALL&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;C&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;urandom&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tr&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;dc&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;A&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;Za&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;z0&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;-9&lt;/span&gt; | &lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt; &amp;amp;&amp;amp; &lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once our Drone is installed and configured, we need to create a systemd unit file to manage the service.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nano&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;systemd&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/system/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;drone&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And copy the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Unit]
Description=Drone server
After=docker.service nginx.service

[Service]
Restart=always
ExecStart=/usr/local/bin/docker-compose -f /etc/drone/docker-compose.yml up
ExecStop=/usr/local/bin/docker-compose -f /etc/drone/docker-compose.yml stop

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;configure-nginx&#34;&gt;Configure Nginx&lt;/h2&gt;
&lt;p&gt;And finally we need to configure our Nginx to proxy requests to our Drone server. First of all find the enabled server blocks with the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;grep&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;R&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nginx&lt;/span&gt;/&lt;span style=&#34;color:#a6e22e&#34;&gt;sites&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;enabled&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You&amp;rsquo;ll see something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Output&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nginx&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/sites-enabled/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;default&lt;/span&gt;:   &lt;span style=&#34;color:#a6e22e&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;yourDroneURL&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nginx&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/sites-enabled/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;default&lt;/span&gt;:   &lt;span style=&#34;color:#a6e22e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;301&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt;$&lt;span style=&#34;color:#a6e22e&#34;&gt;server_name&lt;/span&gt;$&lt;span style=&#34;color:#a6e22e&#34;&gt;request_uri&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nginx&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/sites-enabled/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;default&lt;/span&gt;:   &lt;span style=&#34;color:#a6e22e&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;yourDroneURL&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nginx&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/sites-enabled/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;default&lt;/span&gt;:#  &lt;span style=&#34;color:#a6e22e&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;yourDroneURL&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After knowing the block that is handling our server, we can edit it typing:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nano&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nginx&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/sites-enabled/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And adding this text before the &lt;code&gt;server {&lt;/code&gt; block:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;upstream&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;drone&lt;/span&gt; {&lt;span style=&#34;color:#a6e22e&#34;&gt;upstream&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;drone&lt;/span&gt; {&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;127&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;8000&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;127&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;8000&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt; }}&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;map&lt;/span&gt; $&lt;span style=&#34;color:#a6e22e&#34;&gt;http_upgrade&lt;/span&gt; $&lt;span style=&#34;color:#a6e22e&#34;&gt;connection_upgrade&lt;/span&gt; {&lt;span style=&#34;color:#a6e22e&#34;&gt;map&lt;/span&gt; $&lt;span style=&#34;color:#a6e22e&#34;&gt;http_upgrade&lt;/span&gt; $&lt;span style=&#34;color:#a6e22e&#34;&gt;connection_up&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;upgrade&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;}&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, find the server block with the listen 443 directive inside. Replace the contents of the location block with the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt; {&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;443&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ssl&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;location&lt;/span&gt; / {&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;        # &lt;span style=&#34;color:#a6e22e&#34;&gt;try_files&lt;/span&gt; $&lt;span style=&#34;color:#a6e22e&#34;&gt;uri&lt;/span&gt; $&lt;span style=&#34;color:#a6e22e&#34;&gt;uri&lt;/span&gt;/ =&lt;span style=&#34;color:#ae81ff&#34;&gt;404&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;proxy_pass&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;drone&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;include&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;proxy_params&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Upgrade&lt;/span&gt; $&lt;span style=&#34;color:#a6e22e&#34;&gt;http_upgrade&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;proxy_set_header&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Connection&lt;/span&gt; $&lt;span style=&#34;color:#a6e22e&#34;&gt;connection_upgrade&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;proxy_redirect&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;off&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;proxy_http_version&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;proxy_buffering&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;off&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;chunked_transfer_encoding&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;off&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;proxy_read_timeout&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;    }&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;}&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now it&amp;rsquo;s time to test if our Nginx it&amp;rsquo;s working or not:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nginx&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should see:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Output&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nginx&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;configuration&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nginx&lt;/span&gt;/&lt;span style=&#34;color:#a6e22e&#34;&gt;nginx&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;conf&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;syntax&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nginx&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;configuration&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nginx&lt;/span&gt;/&lt;span style=&#34;color:#a6e22e&#34;&gt;nginx&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;conf&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;successful&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You just need to restart the server and will proxy the requests:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;restart&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nginx&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, you need to start the Drone server:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;drone&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To check the status of the container you can use the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;drone&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can check the Nginx logs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;less&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/var/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/nginx/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And also you can check the Drone logs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;journalctl&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;u&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;drone&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If all it&amp;rsquo;s okay, its time to enable Drone:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;enable&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;drone&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to switch off Drone you can type the following commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cd&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;drone&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/usr/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;local&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/bin/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;docker&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;compose&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;down&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Visit your Drone server at your &lt;code&gt;https://yourDroneURL.com&lt;/code&gt; and log in with the GitHub account you used for obtain the clientID and client secret.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Drone official &lt;a href=&#34;http://docs.drone.io/installation/&#34;&gt;documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Digital Ocean&amp;rsquo;s &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-drone-on-ubuntu-16-04&#34;&gt;article&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Gophercises - Quiz game</title>
      <link>https://charly3pins.dev/blog/gophercises-quiz/</link>
      <pubDate>Mon, 24 Sep 2018</pubDate>
      
      <guid>https://charly3pins.dev/blog/gophercises-quiz/</guid>
      <description>Code review of my first exercise in the Gophercises page. It&#39;s focused in the CSV and time packages in addition to an introduction for the goroutines and channels.</description>
      <content>&lt;p&gt;This is the first of a several articles I&amp;rsquo;m planning to write commenting the different exercises that I&amp;rsquo;m doing in &lt;a href=&#34;https://gophercises.com/&#34;&gt;Gophercises&lt;/a&gt; page.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s a FREE course that will help you become more familiar with Go while developing your skills as a programmer. In the course we will build roughly 20 different mini-applications, packages, and tools that are each designed to teach you something different.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Gophercises&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I like playing with Go on this site because each exercise is focused in a set of packages of the language and the way of they are presented is really clear and easy to understand. Also, the explanations in video are very helpful to see the final code once you&amp;rsquo;ve yours done.&lt;/p&gt;
&lt;h1 id=&#34;quiz-game&#34;&gt;Quiz game&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://gophercises.com/exercises/quiz&#34;&gt;Exercise 1&lt;/a&gt; is about creating a program that reads a quiz provided via CSV file, then give the quiz to a user keeping track of how many questions they get right and how many they get incorrect. Second part is about adding a timer to make the game more interesting to play ending the execution when the timer is expired. At the end of the quiz the program shall output the total number of questions correct and how many questions there were in total. Questions given invalid answers or unanswered are considered incorrect.&lt;/p&gt;
&lt;p&gt;On the first part the most exciting task is to work with &lt;code&gt;encoding/csv&lt;/code&gt; and &lt;code&gt;flag&lt;/code&gt; packages. First one is obviously for work with the CSV file where we&amp;rsquo;ll have our quiz stored. Second one implements command-line flag parsing which we&amp;rsquo;ll use it for injecting the name of the file when we execute the program. What I always do in this cases is go to the &lt;a href=&#34;https://golang.org/pkg/&#34;&gt;official documentation&lt;/a&gt; and check the &lt;code&gt;#pkg-index&lt;/code&gt; anchor of the package that I&amp;rsquo;m intereseted. There are a list of all methods and types that the package contains. Then the &lt;code&gt;#pkg-examples&lt;/code&gt; one is very helpful to clarify sometimes the method usage.&lt;/p&gt;
&lt;h2 id=&#34;flag-parse&#34;&gt;Flag parse&lt;/h2&gt;
&lt;p&gt;First of all, we want to know the filename where is stored the quiz using flags. If we check the &lt;a href=&#34;https://golang.org/pkg/flag/#pkg-index&#34;&gt;flag package&lt;/a&gt; we see that there are a lot of types supported, in this case we need the &lt;a href=&#34;https://golang.org/pkg/flag/#String&#34;&gt;String&lt;/a&gt;. So, for obtaining the filename we&amp;rsquo;ll need to use the method like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;filename&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;flag&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;csv&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;problems.csv&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;csv filename&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;flag&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Parse&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;process-csv&#34;&gt;Process CSV&lt;/h2&gt;
&lt;p&gt;Once we have the filename it&amp;rsquo;s time to read it from the system. In my case I&amp;rsquo;ve used the &lt;code&gt;os&lt;/code&gt; package to open the file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Open&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;filename&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Note that I&amp;rsquo;m using a pointer to filename because the String method returns a &lt;code&gt;*string&lt;/code&gt;.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Then it&amp;rsquo;s time to use the &lt;code&gt;encoding/csv&lt;/code&gt; package for reading the CSV.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;csv&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NewReader&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;rows&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;r&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ReadAll&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With method &lt;a href=&#34;https://golang.org/pkg/encoding/csv/#Reader.ReadAll&#34;&gt;ReadAll&lt;/a&gt; we obtain a &lt;code&gt;[][]string&lt;/code&gt;, so we just need to loop over the slice obtained and parse it to the types we need. In the quiz game, we know that CSV file contains two strings, first one is the question and the second one is the answer. I&amp;rsquo;ve created a custom type called &lt;code&gt;problem&lt;/code&gt; with two strings for manipulate the rows of the file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;problem&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {
	&lt;span style=&#34;color:#a6e22e&#34;&gt;question&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
	&lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now it&amp;rsquo;s time to convert each row read from the file to a &lt;code&gt;problem&lt;/code&gt; struct. The easiest way is to loop over the map of rows and declare a slice of problems &lt;code&gt;[]problem&lt;/code&gt; and initialize them with the values of the row that we are obtaining:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parseCSV&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rows&lt;/span&gt; [][]&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;) []&lt;span style=&#34;color:#a6e22e&#34;&gt;problem&lt;/span&gt; {
	&lt;span style=&#34;color:#a6e22e&#34;&gt;problems&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; make([]&lt;span style=&#34;color:#a6e22e&#34;&gt;problem&lt;/span&gt;, len(&lt;span style=&#34;color:#a6e22e&#34;&gt;rows&lt;/span&gt;))
 	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rows&lt;/span&gt; {
		&lt;span style=&#34;color:#a6e22e&#34;&gt;problems&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;] = &lt;span style=&#34;color:#a6e22e&#34;&gt;problem&lt;/span&gt;{
			&lt;span style=&#34;color:#a6e22e&#34;&gt;question&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;row&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],
			&lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt;:   &lt;span style=&#34;color:#a6e22e&#34;&gt;strings&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;TrimSpace&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;row&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]),
		}
	}
 	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;problems&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;I&amp;rsquo;ve initialized the problems var with the &lt;code&gt;len(rows)&lt;/code&gt; because I knew the exact length and will not change during the execution. Being strict with the nomenclature, the type of our var problems is &lt;code&gt;[len(rows)]problem&lt;/code&gt;. In Go when a slice have the length fixed is called array. You can read further on &lt;a href=&#34;https://blog.golang.org/go-slices-usage-and-internals&#34;&gt;this post&lt;/a&gt;.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Finally it only remains to display the questions on the screen and request the user for the answers. For achieve this I&amp;rsquo;ve used the &lt;a href=&#34;https://golang.org/pkg/fmt/#Scanf&#34;&gt;fmt.Scanf()&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;problems&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parseCSV&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rows&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;correct&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;problem&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;problems&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Problem #%d: %s = &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;problem&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;question&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Scanf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;problem&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt; {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;correct&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;
    }
}
&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d answers correct of %d questions.&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;correct&lt;/span&gt;, len(&lt;span style=&#34;color:#a6e22e&#34;&gt;problems&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Check the entire solution for this part on &lt;a href=&#34;https://github.com/charly3pins/gophercises/commit/3a841b67c154fbbb7749eb61612989be8c1127a9#diff-eef4eb636e863480b77d87bc3000e0d1&#34;&gt;this commit&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;adding-timers&#34;&gt;Adding timers&lt;/h2&gt;
&lt;p&gt;On the second part we are asked to add a timer with a default value of 30s customizable via flags. We need to refactor the code to stop the execution when the time is expired.&lt;/p&gt;
&lt;p&gt;On this part is introduced the &lt;code&gt;time&lt;/code&gt; package used for measuring and displaying time. For do the task, we&amp;rsquo;ll need to create a &lt;a href=&#34;https://golang.org/pkg/time/#Timer&#34;&gt;Timer&lt;/a&gt;. The package provides &lt;a href=&#34;https://golang.org/pkg/time/#NewTimer&#34;&gt;NewTimer&lt;/a&gt; method which need a &lt;a href=&#34;https://golang.org/pkg/time/#Duration&#34;&gt;Duration&lt;/a&gt; as a parameter. Not casual the package provide a set of constants to convert time to nanosecond and then convert them to Duration. All togheter looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;timer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NewTimer&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Duration&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;limit&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Second&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;code&gt;*limit&lt;/code&gt; is obtained via flag in same way we&amp;rsquo;ve obtained the filename in the first section.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;At this point we have the timer created and if we analyze it we see that it contains a channel inside. Let&amp;rsquo;s see what it&amp;rsquo;s a channel first of all and why it&amp;rsquo;s useful in this case.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Channels are the pipes that connect concurrent goroutines. You can send values into channels from one goroutine and receive those values into another goroutine&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://gobyexample.com/channels&#34;&gt;https://gobyexample.com/channels&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can send value to channel &lt;code&gt;ch &amp;lt;- v&lt;/code&gt; and you can receive from a channel and assign it to a var &lt;code&gt;v := &amp;lt;-ch&lt;/code&gt;. Sends and receives block until the other side is ready.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;ve checked the documentation for Timer, you&amp;rsquo;ll see that says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When the Timer expires, the current time will be sent on C&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://golang.org/pkg/time/#Timer&#34;&gt;https://golang.org/pkg/time/#Timer&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So this means that we can use the Timer&amp;rsquo;s channel to know when the timer is expired just checking if it contains any value or not. For this we can use a &lt;code&gt;select&lt;/code&gt; (switch in other languages) inside our &lt;code&gt;for&lt;/code&gt; loop and checking it. If we&amp;rsquo;re in this case, we&amp;rsquo;ll need to stop the quiz so we&amp;rsquo;ll need to print the final result:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; {
&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;timer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;C&lt;/span&gt;:
	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n%d answers correct of %d questions.\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;correct&lt;/span&gt;, len(&lt;span style=&#34;color:#a6e22e&#34;&gt;problems&lt;/span&gt;))
	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;The &lt;code&gt;return&lt;/code&gt; is because I want to break the loop and I don&amp;rsquo;t want to use labels and gotos on this code.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;On the other hand, we need to cover the case when the timer is not expired, so we can add a &lt;code&gt;default&lt;/code&gt; case printing the question and waiting for the answer. For achieve this, we just need to move our previous code inside the &lt;code&gt;select&lt;/code&gt; block. The complete code for the loop:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;problem&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;problems&lt;/span&gt; {
	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Problem #%d: %s = &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;problem&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;question&lt;/span&gt;)
	&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; {
	&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;timer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;C&lt;/span&gt;:
		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n%d answers correct of %d questions.\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;correct&lt;/span&gt;, len(&lt;span style=&#34;color:#a6e22e&#34;&gt;problems&lt;/span&gt;))
		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;:
		&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Scanf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt;)
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;problem&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt; {
			&lt;span style=&#34;color:#a6e22e&#34;&gt;correct&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;At this point you could think that we have the program finished but if you execute it you&amp;rsquo;ll see what happens. Yes! the &lt;code&gt;fmt.Scanf(&amp;quot;%s\n&amp;quot;, &amp;amp;answer)&lt;/code&gt; is blocking and the program doesn&amp;rsquo;t continues execution until the function receives a value. To solve this, we&amp;rsquo;ll need to use a &lt;code&gt;goroutine&lt;/code&gt; and move the blocking part inside. However, before that let&amp;rsquo;s talk a bit about what are and how to integrate with our code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A goroutine is a lightweight thread managed by the Go runtime.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://tour.golang.org/concurrency/1&#34;&gt;https://tour.golang.org/concurrency/1&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So in Go the threads are called &lt;!-- raw HTML omitted --&gt;goroutine&lt;!-- raw HTML omitted --&gt; and they are easy to recognise because they are calls to a function preceeded by the keyword &lt;code&gt;go&lt;/code&gt;. Using the golang tour example below, we see the goroutine is executing the &lt;code&gt;say&lt;/code&gt; function concurrently passing the parameter &amp;ldquo;world&amp;rdquo; and in main thread we have the exeuction of &lt;code&gt;say&lt;/code&gt; with parameter &amp;ldquo;hello&amp;rdquo;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;say&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;) {
	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &amp;lt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; {
		&lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Sleep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Millisecond&lt;/span&gt;)
		&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;)
	}
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
	&lt;span style=&#34;color:#66d9ef&#34;&gt;go&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;say&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;world&amp;#34;&lt;/span&gt;)
	&lt;span style=&#34;color:#a6e22e&#34;&gt;say&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As we expected, the output of the program is not sequential and we obtain the 5x &lt;code&gt;hello world&lt;/code&gt; sentences mixed.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;world
hello
hello
world
world
hello
hello
world
world
hello
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Knowing what is a channel and how to work with them and knowing the powerful of the goroutines, we can mix them to achieve our goal in this task. The channels allows goroutines to synchronize without explicit locks or condition variables between them. Let&amp;rsquo;s do it!&lt;/p&gt;
&lt;p&gt;First we move the question outside the &lt;code&gt;select&lt;/code&gt; block and extract the &lt;code&gt;default&lt;/code&gt; case in a goroutine like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Problem #%d: %s = &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;problem&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;question&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;answerChannel&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; make(&lt;span style=&#34;color:#66d9ef&#34;&gt;chan&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;go&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt;() {
	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Scanf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt;)
	&lt;span style=&#34;color:#a6e22e&#34;&gt;answerChannel&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt;
}()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;As we read, we need a channel to talk between the goroutines (remember that the main thread is a goroutine in itself) so we have to create a new channel &lt;code&gt;answerChannel&lt;/code&gt; and pass the user&amp;rsquo;s response. &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Last but not least, we need to do is read the channel we&amp;rsquo;ve created. For this I&amp;rsquo;ve created a new &lt;code&gt;case&lt;/code&gt; block:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; {
&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;timer&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;C&lt;/span&gt;:
	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n%d answers correct of %d questions.\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;correct&lt;/span&gt;, len(&lt;span style=&#34;color:#a6e22e&#34;&gt;problems&lt;/span&gt;))
	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;answerChannel&lt;/span&gt;:
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;problem&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;answer&lt;/span&gt; {
		&lt;span style=&#34;color:#a6e22e&#34;&gt;correct&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we have all done, checking on the first case the Timer&amp;rsquo;s channel to know if the time is expired and the second case receiving the user&amp;rsquo;s answer every time he types on the screen, but without blocking the execution because we&amp;rsquo;ve moved this task to a &lt;code&gt;goroutine&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The full code for the second part is available &lt;a href=&#34;https://github.com/charly3pins/gophercises/commit/2b821d0a9821cd6de93985a963e2a24350b34b7b&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;in-summary&#34;&gt;In summary&lt;/h1&gt;
&lt;p&gt;To sum up, I think this is a very good exercise to do because it introduces you a few useful packages like &lt;code&gt;encoding/csv&lt;/code&gt; that I&amp;rsquo;m sure you&amp;rsquo;ll need to use sometimes. There a lot of information that is stored in &lt;code&gt;.csv&lt;/code&gt; and it&amp;rsquo;s always useful know how to deal with it. Also it&amp;rsquo;s a good starting point for the &lt;code&gt;channels&lt;/code&gt; and &lt;code&gt;goroutines&lt;/code&gt; (probably I&amp;rsquo;ll dedicate an entire post to them). Here you can see how to work with them together and why are useful in a real case.&lt;/p&gt;
&lt;p&gt;You can check the &lt;a href=&#34;https://github.com/charly3pins/gophercises/tree/master/quiz&#34;&gt;complete repo&lt;/a&gt; that I&amp;rsquo;ve created for this exercise.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Building static blog with Hugo</title>
      <link>https://charly3pins.dev/blog/building-static-blog-with-hugo/</link>
      <pubDate>Sat, 22 Sep 2018</pubDate>
      
      <guid>https://charly3pins.dev/blog/building-static-blog-with-hugo/</guid>
      <description>Quick steps to create your own static blog with Hugo and install a theme from the catalogue. After that, push your site to GitHub and deploy it with GitHub Pages.</description>
      <content>&lt;p&gt;If you want to create a fast static website I recommend you &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. It&amp;rsquo;s written in Go and it&amp;rsquo;s really use to configure and adapt to your needs. In addition, you can choose through different &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;themes&lt;/a&gt; created by the team and others by the community or even create your own one.&lt;/p&gt;
&lt;p&gt;Here I&amp;rsquo;ll explain in some steps how to create one blog with Hugo and how to be hosted &amp;amp; deployed in GitHub and GitHub Pages. If you need more detail visit the official &lt;a href=&#34;https://gohugo.io/documentation/&#34;&gt;Hugo docs&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;start&#34;&gt;Start&lt;/h2&gt;
&lt;p&gt;First of all you need to install Hugo, in my case using &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;brew&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hugo&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Check the version installed:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hugo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;create-site&#34;&gt;Create site&lt;/h2&gt;
&lt;p&gt;Once you have Hugo installed, you&amp;rsquo;re able to create your website using the command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hugo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;site&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;your&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;blog&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After that, you&amp;rsquo;ll see a new folder called &lt;code&gt;your-blog-name&lt;/code&gt; and if you look inside you&amp;rsquo;ll see the following tree:
&lt;img src=&#34;https://charly3pins.dev/images/build-hugo-static-blog/folder-tree-your-blog-name.png&#34; alt=&#34;Folder tree&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Archetypes are content template files for your project, used when you run &lt;code&gt;hugo new&lt;/code&gt; command.&lt;/li&gt;
&lt;li&gt;Content is where all posts and pages are stored. The same structure in this folder will be used for organize the URLs in your rendered site.&lt;/li&gt;
&lt;li&gt;Data is a folder for store additional data for generating your site.&lt;/li&gt;
&lt;li&gt;Layouts is the folder where are stored the template of your site if you&amp;rsquo;re not using a theme.&lt;/li&gt;
&lt;li&gt;Static stores all static files for your site.&lt;/li&gt;
&lt;li&gt;Themes is where the themes you install are stored.&lt;/li&gt;
&lt;li&gt;config.toml stores the main configuration for your site.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;install-theme&#34;&gt;Install theme&lt;/h2&gt;
&lt;p&gt;If you want to use a theme already created you can do it in two ways. To check the existing themes visit the official &lt;a href=&#34;https://github.com/panr/hugo-theme-hello-friend&#34;&gt;Hugo themes&lt;/a&gt; website where you can see a demo of each one.&lt;/p&gt;
&lt;p&gt;First of all you need to init a git repo inside your project:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cd&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;your&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;blog&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;;\&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt;;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then you can clone the repo inside the &lt;code&gt;themes&lt;/code&gt; folder:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clone&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;github&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/panr/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hugo&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;hello&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;friend&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;themes&lt;/span&gt;/&lt;span style=&#34;color:#a6e22e&#34;&gt;hello&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;friend&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you don&amp;rsquo;t want to make any changes, it&amp;rsquo;s better to include the theme as a git submodule and you can get new updates when they are available. Do it with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;submodule&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;github&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/panr/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hugo&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;hello&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;friend&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;themes&lt;/span&gt;/&lt;span style=&#34;color:#a6e22e&#34;&gt;hello&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;friend&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;create-content&#34;&gt;Create content&lt;/h2&gt;
&lt;p&gt;For generate your first blog post you can use the command &lt;code&gt;hugo new&lt;/code&gt; and set the path you want, in my case &lt;code&gt;posts&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hugo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;posts&lt;/span&gt;/&lt;span style=&#34;color:#a6e22e&#34;&gt;my&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;first&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;post&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;md&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You will obtain the following file:
&lt;img src=&#34;https://charly3pins.dev/images/build-hugo-static-blog/example-post.png&#34; alt=&#34;Example post&#34;&gt;&lt;/p&gt;
&lt;p&gt;The first section is for parameters and the second one is for the content in this case in markdown. Check this &lt;a href=&#34;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&#34;&gt;Markdown Cheatsheet&lt;/a&gt; a quick reference and showcase.&lt;/p&gt;
&lt;h2 id=&#34;run-your-site&#34;&gt;Run your site&lt;/h2&gt;
&lt;p&gt;Once you have created the post you can build your site using the &lt;code&gt;hugo server&lt;/code&gt; command. The flag &lt;code&gt;-D&lt;/code&gt; is for render drafts:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hugo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;D&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And it will appear the rendering logs and at the end message similar to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Web&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Server&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;available&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;localhost&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;1313&lt;/span&gt;/ (&lt;span style=&#34;color:#a6e22e&#34;&gt;bind&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;address&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;127&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Copy the URL to your browser and you will see your site up and running!&lt;/p&gt;
&lt;h2 id=&#34;host-on-github&#34;&gt;Host on GitHub&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;ll use the User/Organization Pages &lt;code&gt;https://&amp;lt;USERNAME|ORGANIZATION&amp;gt;.github.io/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Create a &lt;code&gt;&amp;lt;YOUR-PROJECT&amp;gt;&lt;/code&gt; repository on GitHub. This repository will contain Hugo‚Äôs content and other source files.&lt;/p&gt;
&lt;p&gt;Create a &lt;code&gt;&amp;lt;USERNAME&amp;gt;.github.io&lt;/code&gt; GitHub repository. This is the repository that will contain the fully rendered version of your Hugo website.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clone&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;github&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&amp;lt;USERNAME&amp;gt;/&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;YOUR&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;PROJECT&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cd&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;YOUR&lt;/span&gt;-&lt;span style=&#34;color:#a6e22e&#34;&gt;PROJECT&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run your website locally using the command &lt;code&gt;hugo server&lt;/code&gt; or if you are using theme &lt;code&gt;hugo server -t &amp;lt;THEME_NAME&amp;gt;&lt;/code&gt;. Follow the instructions in console to access it. Web server should be available at  http://localhost:1313/&lt;/p&gt;
&lt;p&gt;Finally you need to add the &lt;code&gt;&amp;lt;USERNAME&amp;gt;.github.io&lt;/code&gt; repo inside the &lt;code&gt;public&lt;/code&gt; folder as a git submodule in order to update your website once you regenerate the site.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;submodule&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;master&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt;@&lt;span style=&#34;color:#a6e22e&#34;&gt;github&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt;:&amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;USERNAME&lt;/span&gt;&amp;gt;/&amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;USERNAME&lt;/span&gt;&amp;gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;github&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;io&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you don&amp;rsquo;t have the RSA pair key configured you&amp;rsquo;ll need to add the submodule via HTTP:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;submodule&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; -&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;master&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;github&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&amp;lt;USERNAME&amp;gt;/&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;USERNAME&lt;/span&gt;&amp;gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;github&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;io&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To automate the next steps you can save it to &lt;code&gt;deploy.sh&lt;/code&gt;. Remember to make it executable with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;chmod&lt;/span&gt; +&lt;span style=&#34;color:#a6e22e&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;deploy&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;sh&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;deploy.sh&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
echo -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[0;32mDeploying updates to GitHub...\033[0m&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Build the project.&lt;/span&gt;
hugo &lt;span style=&#34;color:#75715e&#34;&gt;# if using a theme, replace with `hugo -t &amp;lt;YOURTHEME&amp;gt;`&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Go To Public folder&lt;/span&gt;
cd public
&lt;span style=&#34;color:#75715e&#34;&gt;# Add changes to git.&lt;/span&gt;
git add .

&lt;span style=&#34;color:#75715e&#34;&gt;# Commit changes.&lt;/span&gt;
msg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rebuilding site `date`&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $# -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; msg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$msg&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Push source and build repos.&lt;/span&gt;
git push origin master

&lt;span style=&#34;color:#75715e&#34;&gt;# Come Back up to the Project Root&lt;/span&gt;
cd ..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
  </channel>
</rss>