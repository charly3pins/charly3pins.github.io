<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on Charly3Pins, software engineer</title>
    <link>https://charly3pins.dev/tags/git/</link>
    <description>Recent content in git on Charly3Pins, software engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://charly3pins.dev/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting and Creating Projects</title>
      <link>https://charly3pins.dev/blog/mastering-git-commands/getting-and-creating-projects/</link>
      <pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://charly3pins.dev/blog/mastering-git-commands/getting-and-creating-projects/</guid>
      <description>Assuming that you already installed git and configured it on your computer, let’s start from the beginning and check the initial commands for initialize and download a repository.
init git-init - Create an empty Git repository or reinitialize an existing one This command creates an empty Git repository (a .git directory in the location you executed the command). This folder will contain some files and subdirectories that I will not cover in this post because they are too advanced for what I want to achieve with these articles.</description>
    </item>
    
    <item>
      <title>Mastering Git commands</title>
      <link>https://charly3pins.dev/blog/mastering-git-commands/</link>
      <pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://charly3pins.dev/blog/mastering-git-commands/</guid>
      <description>Git is a fast, scalable, distributed revision control system. Being a distributed revision control system means that each developer has each own copy of the project’s history locally, not like centralized ones that all developers have to point to the “one and only” server (like SVN). For that reason Git is faster than others, because almost everything is performed locally instead of remote calls to the centralized revision control server. Each repo provides a separato working tree with project files for each developer.</description>
    </item>
    
    <item>
      <title>Custom commit messages</title>
      <link>https://charly3pins.dev/blog/custom-commit-messages/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://charly3pins.dev/blog/custom-commit-messages/</guid>
      <description>I&amp;rsquo;ve been using the CMF tool for the last one year I think and and its simplicity is its potential. Basically it is a terminal tool developd in Go by Walmart Digital that helps you to standarize the commits log of your projects.
I&amp;rsquo;ve been using for the last year and a half approximatley and all I can say its very useful. We agreed with the team the configuration we want to use and defined a set of changes that applies in our case.</description>
    </item>
    
  </channel>
</rss>
