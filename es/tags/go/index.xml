<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on charly3pins.dev</title>
    <link>https://charly3pins.dev/es/tags/go/</link>
    <description>Recent content in go on charly3pins.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Oct 2020</lastBuildDate><atom:link href="https://charly3pins.dev/es/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tournaments generator</title>
      <link>https://charly3pins.dev/es/code/tournaments-generator/</link>
      <pubDate>Fri, 01 May 2020</pubDate>
      
      <guid>https://charly3pins.dev/es/code/tournaments-generator/</guid>
      <description>Prueba de concepto de la construcción de una aplicación para administrar torneos FIFA 20 entre diferentes personas usando Flutter para construir una aplicación móvil y Go para construir una API que actúa como servidor. También usé Python para construir raspadores simples.</description>
      <content>&lt;h2 id=&#34;por-qué&#34;&gt;POR QUÉ&lt;/h2&gt;
&lt;p&gt;La motivación para iniciar este proyecto no es otra que mi curiosidad por las aplicaciones móviles. Es obvio que la forma de consumir tecnología ha cambiado en los últimos años y cada vez se hace más a través de un dispositivo móvil. Por esa razón, quería explorar cómo funcionan las aplicaciones móviles y cómo puedo crear una desde cero.
Hice algunos tutoriales de Android, pero como están cambiando muchas cosas al lanzar nuevas versiones y mi idea era crear algo genérico para todos los dispositivos, decidí intentarlo con &lt;a href=&#34;https://flutter.dev/&#34;&gt;Flutter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Estaba entre &lt;a href=&#34;https://reactnative.dev/&#34;&gt;React Native&lt;/a&gt; o Flutter, pero después de leer algunos pros y contras, decidí aliarme con Flutter. Comencé a leer su &lt;a href=&#34;https://flutter.dev/docs&#34;&gt;documentación&lt;/a&gt; y era muy similar a Android (están usando Dart en la parte inferior) y comencé a recordar mis viejos tiempos en los tutoriales de Android y me gusta, así que Yo continué. Después de unos días leyendo solo documentación técnica, continué con la aplicación &amp;ldquo;hello world&amp;rdquo; &lt;a href=&#34;https://flutter.dev/docs/get-started/codelab&#34;&gt;tutorial&lt;/a&gt; que proporcionan en el sitio web. Y finalmente, estaba listo para comenzar mi propio proyecto.&lt;/p&gt;
&lt;p&gt;Para cuando comenzó la pandemia mundial, mis amigos y yo comenzamos una liga FIFA 20 en PS4 para distraernos por las tardes / noches. Inicialmente solo se trataba de jugar y nada más, pero luego comenzamos a tener un panel de Power BI para estadísticas, un canal de YouTube para compartir los juegos en vivo y luego almacenarlos allí y un Twitter para tuitear las actualizaciones de la clasificación cada semana. La primera liga se creó de forma manual y un poco dolorosa y súper estática, así que decidí usar ese tema para crear una aplicación que nos ayude a administrar la segunda liga creando la liga, administrando nuestros equipos y partidos allí, notificando los resultados. y mostrando estadísticas más detalladas en su interior.&lt;/p&gt;
&lt;h2 id=&#34;qué&#34;&gt;QUÉ&lt;/h2&gt;
&lt;p&gt;En primer lugar, quería poner toda la información real de FIFA 20 dentro del sitio web relacionada con ligas, equipos y jugadores. Para eso encontré algunos sitios web que tienen esa información abierta y gratuita, pero no tienen una API para consumirla. La idea de copiar manualmente era muy tentadora, pero preferí escribir un rastreador simple en &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt; usando la biblioteca &lt;a href=&#34;https://www.crummy.com/software/BeautifulSoup/bs4/doc/#css-selectors&#34;&gt;BeautifulSoup&lt;/a&gt; con los css-selectors que proporciona. Haciendo algunos ajustes aquí y allá, al final terminé teniendo 3 archivos json, uno para cada tema que quería inicialmente, ¡así que todo perfecto!&lt;/p&gt;
&lt;p&gt;Luego, para poder introducir toda esa información en la base de datos, la idea fue crear una herramienta de línea de comandos que lea esos archivos y genere las correspondientes declaraciones SQL y luego genere los archivos de migración correspondientes.
Elegí &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; como lenguaje de programación para la API y creé un &lt;code&gt;cmd&lt;/code&gt; que me permite hacer la idea deseada. La base de datos sería &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; por lo que las &amp;ldquo;inserciones&amp;rdquo; tienen que estar de acuerdo con su sintaxis.&lt;/p&gt;
&lt;p&gt;Con todos los datos iniciales listos, comencé a diseñar el resto de la base de datos y los posibles puntos finales lo necesitan para administrar toda esa información. Elegí &lt;a href=&#34;https://github.com/gorilla/mux&#34;&gt;mux&lt;/a&gt; para HTTP por su simplicidad pero potente en comparación con la lib estándar (solo para el análisis de parámetros vale la pena &amp;hellip;). Como quería explorar más el lado de la aplicación móvil que el lado del servidor, simplemente organicé el código usando la [Arquitectura de capas](&lt;a href=&#34;https://www.oreilly.com/library/view/software-architecture-patterns/9781491971437/ch01&#34;&gt;https://www.oreilly.com/library/view/software-architecture-patterns/9781491971437/ch01&lt;/a&gt; .html) agrupando los elementos por función y usé &lt;a href=&#34;https://gorm.io/index.html&#34;&gt;GORM&lt;/a&gt; como el ORM para simplificar la consulta y las asignaciones entre la base de datos y mis modelos.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/api-structure.jpeg&#34; alt=&#34;api structure&#34;&gt;&lt;/p&gt;
&lt;p&gt;Dentro de la carpeta &lt;code&gt;cmd&lt;/code&gt; he creado diferentes comandos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;migración: gestiona las migraciones en la base de datos&lt;/li&gt;
&lt;li&gt;analizador: traduce el json del rastreador en sentencias sql&lt;/li&gt;
&lt;li&gt;servidor: ejecuta el servidor&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dentro de la carpeta &lt;code&gt;pkg&lt;/code&gt; es fácil identificar qué están haciendo las carpetas por su propio nombre.&lt;/p&gt;
&lt;p&gt;Para la aplicación móvil, comencé a poner todos los archivos dentro de una carpeta de &lt;code&gt;componentes&lt;/code&gt;, pero cuando comenzó a crecer, fue una tarea difícil de administrar. Después de agregar más complejidad a la aplicación, termino encontrando una forma limpia de organizar el código, dividiéndolo en dos carpetas separadas; uno para el núcleo y otro para la interfaz de usuario. Luego dentro de cada uno también categoricé los diferentes tipos de componentes en función de sus responsabilidades y al final el código (al menos para mí que no soy un experto en Flutter) terminó luciendo súper limpio y (sin duda) más mantenible . Debajo de la organización de carpetas en una vista general:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/app-structure.jpeg&#34; alt=&#34;app structure&#34;&gt;&lt;/p&gt;
&lt;p&gt;Al principio, cuando comencé a codificar y ver los resultados, todo fue súper elegante y pensé que era más fácil de lo esperado. Conectar la aplicación con la API fue solo una cuestión de saber cómo usar la biblioteca &lt;code&gt;http&lt;/code&gt; y los métodos&lt;code&gt; get&lt;/code&gt; o &lt;code&gt;post&lt;/code&gt; se conectaron sin problemas.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

    &lt;span class=&#34;kt&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonBody&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toJson&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_baseUrl&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/token&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nl&#34;&gt;headers:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;body:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonBody&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;statusCode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fromJson&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;El único problema al que me he enfrentado allí es que estaba ejecutando las aplicaciones desde el emulador de Android; eso significa que se estaba ejecutando en una máquina virtual, por lo que la IP no era mi local y no puede acceder al &lt;code&gt;localhost&lt;/code&gt;. Después de un poco de investigación, encontré el correcto y todo funcionó correctamente.&lt;/p&gt;
&lt;p&gt;Los problemas comenzaron cuando quería pasar información entre componentes y actualizar la vista en función de esa información, o mejor aún, no actualizar si nada cambia cuando entro de nuevo en una vista (por ejemplo, al pasar de una lista a una vista de detalle, y volviendo de nuevo a la lista). Después de un día leyendo en foros sobre el mismo problema al que me estaba enfrentando, encontré el paquete [Proveedor] (&lt;a href=&#34;https://pub.dev/packages/provider&#34;&gt;https://pub.dev/packages/provider&lt;/a&gt;) y todo parecía fácil y el santo grial para todo, pero no lo era.&lt;/p&gt;
&lt;p&gt;¡El verdadero dolor acaba de comenzar allí! Me tomó algunos días entender realmente cómo funciona. El proveedor inicial es fácil de entender y lo usa y funciona, pero luego desea cambiar solo una pequeña parte de la vista, o desea reconstruir la totalidad, o desea modificar algunos valores en una vista A y luego vaya a la vista B y vea los cambios allí, y todos esos ejemplos está codificado de manera completamente diferente y primero debe saber que hay una forma para cada caso de hacer las cosas y segundo, debe saber cómo hacerlo. Al final utilicé Provider, ProxyProvider, StreamProvider y ChangeNotifierProvider.&lt;/p&gt;
&lt;p&gt;El proyecto no está terminado pero por ahora está En Espera con las siguientes funcionalidades:&lt;/p&gt;
&lt;p&gt;Inicialmente, el usuario puede cambiar entre las vistas de registro / inicio de sesión.
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/signup.png&#34; alt=&#34;signup&#34;&gt;
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/login.png&#34; alt=&#34;login&#34;&gt;&lt;/p&gt;
&lt;p&gt;Una vez que el usuario está dentro de la aplicación esta tiene diferentes pestañas donde los próximos &lt;code&gt;Partidos&lt;/code&gt; tiene que jugar, los&lt;code&gt; Torneos&lt;/code&gt; que está jugando y los &lt;code&gt;Grupos&lt;/code&gt; donde está presente y los miembros dentro. En la parte superior tiene una barra de navegación con una foto de perfil, un ícono de campana para las notificaciones, un ícono de lente para buscar a otros miembros y agregar como sus amigos y el botón de cierre de sesión para desconectarse.
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/home.png&#34; alt=&#34;home&#34;&gt;&lt;/p&gt;
&lt;p&gt;Si hace clic en la foto de perfil va directamente al perfil del usuario donde muestra los amigos y donde puede editar su información personal (nombre, nombre de usuario, foto de perfil):
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/profile.png&#34; alt=&#34;profile&#34;&gt;&lt;/p&gt;
&lt;p&gt;Al presionar el ícono de la lente, cambia la vista a la funcionalidad de súper buscador que permite al usuario encontrar a otras personas que ya están en la plataforma, agregarlas como sus amigos y luego crear grupos, generar torneos y jugar partidos juntos. El buscador es una búsqueda de &amp;ldquo;me gusta&amp;rdquo;, por lo que si alguna de las letras que introduce aparece en algún nombre de usuario, entonces se muestra allí.
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/searcher.png&#34; alt=&#34;searcher&#34;&gt;&lt;/p&gt;
&lt;p&gt;Luego de eso, si el usuario ingresa a un perfil que no es amigo, aparecerá el botón para agregarlo y si se hace clic, ocultará ese botón y mostrará la información de que ya hay una solicitud enviada, esperando al otro usuario. para contestarlo.
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/add-friend.png&#34; alt=&#34;add friend&#34;&gt;
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/add-friend-requested.png&#34; alt=&#34;add friend requested&#34;&gt;&lt;/p&gt;
&lt;p&gt;Actuando como el otro usuario, al iniciar sesión, el icono de campana mostrará una nueva notificación. Entrar aparece como una notificación de amigo y se puede responder directamente desde la lista o entrar en el perfil de &amp;ldquo;solicitante&amp;rdquo; y aceptar / rechazar allí. Si se acepta la solicitud de amistad, aparecerá como un nuevo amigo en el perfil del usuario.
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/friend-request-notification.png&#34; alt=&#34;friend request notification&#34;&gt;
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/friend-request-notification-answer.png&#34; alt=&#34;friend request notification answer&#34;&gt;
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/profile-multifriends.png&#34; alt=&#34;profile multi friends&#34;&gt;&lt;/p&gt;
&lt;p&gt;Después de que un usuario tiene algunos amigos, es el momento en que puede crear un grupo. Para eso la aplicación tiene la tercera pestaña llamada &lt;code&gt;Grupos&lt;/code&gt; y un botón (+).
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/new-group.png&#34; alt=&#34;new group&#34;&gt;&lt;/p&gt;
&lt;p&gt;Dentro del generador de grupos, mostrará la lista de amigos en la parte superior. A medida que se seleccionan, se colocan en la lista siguiente, donde se pueden eliminar si se desea; cuando se seleccionan todos los amigos, es hora de pasar a la siguiente pantalla con el botón (&amp;ndash;&amp;gt;).
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/new-group-selected.png&#34; alt=&#34;new group selected&#34;&gt;&lt;/p&gt;
&lt;p&gt;El siguiente paso es poner un buen nombre para ese grupo y luego presionar la casilla uno para crear el grupo.
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/new-group-name.png&#34; alt=&#34;new group name&#34;&gt;&lt;/p&gt;
&lt;p&gt;Cuando el usuario regresa a la vista de inicio, aparece el nuevo grupo creado y sus miembros en la lista.
&lt;img src=&#34;https://charly3pins.dev/images/code/tournaments-generator/new-group-created.png&#34; alt=&#34;new group created&#34;&gt;&lt;/p&gt;
&lt;p&gt;A partir de aquí lo que falta es crear los &lt;code&gt;Torneos&lt;/code&gt; seleccionando el grupo y los miembros de ese grupo que quieren jugar, el número de equipos para cada integrante, los equipos, las rondas, el tipo de torneo, etc. y luego generar el calendario. Muestre el calendario en la pestaña &lt;code&gt;Partidos&lt;/code&gt; y dentro de cada partida permita a los usuarios agregar los resultados. También proporcione una clasificación y las estadísticas de cada partido y una agrupada para cada encuentro y una genérica.&lt;/p&gt;
&lt;h2 id=&#34;pensamientos-finales&#34;&gt;PENSAMIENTOS FINALES&lt;/h2&gt;
&lt;p&gt;Con esta prueba de concepto tuve la oportunidad de trabajar en una aplicación compleja en términos de diseño de componentes reutilizables en una aplicación móvil, llamar a una API externa para administrar la información que se muestra en la aplicación y aprender a usar el paquete Provider para mover información. entre múltiples vistas y controlar el estado de la aplicación de una forma más sencilla y eficaz.&lt;/p&gt;
&lt;p&gt;Hay mucho más que aprender con respecto al desarrollo móvil, pero considero este proyecto como un paso inicial para empezar. Algún día haré las vistas que faltan para que podamos usarlas en el mundo real, pero espero que no sea porque tengamos otra pandemia 😏&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Código fuente de la API en Go: &lt;a href=&#34;https://github.com/charly3pins/fifa-gen-api&#34;&gt;https://github.com/charly3pins/fifa-gen-api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Código fuente de la app en Flutter: &lt;a href=&#34;https://github.com/charly3pins/fifa_gen&#34;&gt;https://github.com/charly3pins/fifa_gen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Suba de nivel sus presentaciones con Go</title>
      <link>https://charly3pins.dev/es/blog/suba-de-nivel-sus-presentaciones-con-go/</link>
      <pubDate>Tue, 06 Oct 2020</pubDate>
      
      <guid>https://charly3pins.dev/es/blog/suba-de-nivel-sus-presentaciones-con-go/</guid>
      <description>Genera fácilmente tus presentaciones con &#34;present&#34;, la herramienta impulsada por Go que genera y renderiza tus diapositivas.</description>
      <content>&lt;p&gt;Si es una persona técnica y no te gusta luchar con los programas de presentación pero quiere / necesita crear uno, enhorabuena! estás en el lugar correcto. Sé que, como ingenieros de software, queremos codificar, leer o mirar cosas relacionadas con software, arquitectura o devops, pero no con presentaciones. A veces, se nos exige que presentamos algo a otros miembros del equipo, a los propietarios de productos o incluso más aterradores, al equipo directivo.&lt;/p&gt;
&lt;p&gt;Por este motivo, quiero presentaros el paquete &lt;a href=&#34;https://godoc.org/golang.org/x/tools/present&#34;&gt;present&lt;/a&gt; de Go. Se utiliza para crear diapositivas a Golang alojadas en discussions.golang.org o tu privada. La he utilizado varias veces, sobre todo cuando quiero compartir algo con mis compañeros del equipo (algún código, claro), porque no quiero perder el tiempo con los programas. Acabo de crear el proyecto para las diapositivas, añado mis diapositivas a la marca, añado las imágenes necesarias y las presento. Veamos detalladamente cómo funciona!&lt;/p&gt;
&lt;p&gt;Suponiendo que tiene Go &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;instalado&lt;/a&gt; y configurado correctamente, todo lo que debe instalar es el paquete con el siguiente orden:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span class=&#34;nx&#34;&gt;go&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;u&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;golang&lt;/span&gt;.&lt;span class=&#34;nx&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/x/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tools&lt;/span&gt;/&lt;span class=&#34;nx&#34;&gt;present&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Comprueba si funciona escribiendo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span class=&#34;nx&#34;&gt;present&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Debería de mostrar un mensaje similar a:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span class=&#34;m&#34;&gt;2020&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/10/&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;04&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;m&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;m&#34;&gt;54&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Open&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;your&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;web&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;browser&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;visit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;:&lt;span class=&#34;sr&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;127&lt;/span&gt;.&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;:&lt;span class=&#34;m&#34;&gt;3999&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Por lo tanto, puede visitar el enlace y ver el servidor local preparado para alojar sus presentaciones. Increíble, ¿o no? De acuerdo, sé que desea mostrar algo que no sea un directorio vacío, así que vamos a crear un ejemplo de presentación para ello.&lt;/p&gt;
&lt;h2 id=&#34;formato&#34;&gt;Formato&lt;/h2&gt;
&lt;p&gt;Cree un directorio para las diapositivas:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span class=&#34;nx&#34;&gt;mkdir&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;go&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;present&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;go&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;present&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;example&lt;/span&gt;/&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Cree la primera diapositiva:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span class=&#34;nx&#34;&gt;vim&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;initial&lt;/span&gt;.&lt;span class=&#34;nx&#34;&gt;slide&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Y añada el siguiente contenido:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Learning Go present
6 October 2020

Crash Bandicoot
crash.bandicoot@gmail.com

* Hello World

I&#39;m a slide
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Por lo tanto, si vuelve a ejecutar el comando &lt;code&gt;present&lt;/code&gt; dentro de su carpeta y va de nuevo al navegador debería ver la pantalla siguiente:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/initial-slide.jpeg&#34; alt=&#34;initial slide&#34;&gt;&lt;/p&gt;
&lt;p&gt;Haga clic en el enlace &lt;code&gt;initial.slide&lt;/code&gt; y admire su presentación.
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/initial-presentation.jpeg&#34; alt=&#34;initial presentation&#34;&gt;&lt;/p&gt;
&lt;p&gt;Como puede ver, la primera línea es el título, la segunda la fecha y luego la sigue el autor. En la segunda diapositiva, en realidad la primera, aparece el título de la diapositiva y el texto de la misma. El último muestra un título de agradecimiento y su nombre y contacto (correo electrónico, twitter, etc.) que ha agregado a la diapositiva. Ver a continuación:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/end-presentation.jpeg&#34; alt=&#34;end presentation&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sintaxis-heredada-del-comando-present&#34;&gt;Sintaxis heredada del comando present&lt;/h2&gt;
&lt;p&gt;Es compatible con Markdown, pero aquí exploraremos la &lt;a href=&#34;https://godoc.org/golang.org/x/tools/present#hdr-Legacy_Present_Syntax&#34;&gt;sintaxis heredada de present&lt;/a&gt;, ya que el Markdown tiene muchos recursos sobre cómo comprobar. Así que vamos a explorar un poco las funciones que ofrece &amp;ldquo;presente&amp;rdquo; para formatear y añadir texto a nuestros diapositivas.&lt;/p&gt;
&lt;p&gt;Primero son las opciones clásicas para formatear el texto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;normal vs `highlighted`
*bold*
_italic_
*multiple*bold*text*
_multiple_italic_text_
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Y el resultado es:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/text-formatting.jpeg&#34; alt=&#34;text formatting&#34;&gt;&lt;/p&gt;
&lt;p&gt;También se puede añadir una lista:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Grocery list for the gopher:

- go routines
- garbage collector
- Rust
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/text-formatting-list.jpeg&#34; alt=&#34;text formatting list&#34;&gt;&lt;/p&gt;
&lt;p&gt;O un nivel diferente de subsecciones así:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;** Subsection

Gopher is diving the subsection.

*** Sub-subsection

Another Gopher is diving more into the sub-subsection!
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Y verá la diapositiva como esta locura:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/text-formatting-subsections.jpeg&#34; alt=&#34;text formatting subsections&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/gophers.gif&#34; alt=&#34;gophers&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;invocaciones-de-comandos&#34;&gt;Invocaciones de comandos&lt;/h2&gt;
&lt;p&gt;Aparte del formato de texto, hay una &lt;a href=&#34;https://godoc.org/golang.org/x/tools/present#hdr-Command_Invocations&#34;&gt;invocaciones de comandos especiales&lt;/a&gt; que puede invocar para llevar su presentación a otro nivel.&lt;/p&gt;
&lt;h3 id=&#34;imágenes-y-vídeos&#34;&gt;imágenes y vídeos&lt;/h3&gt;
&lt;p&gt;El comando &lt;code&gt;.image&lt;/code&gt; inyecta una imagen en la diapositiva. Acepta 1 o 3 argumentos (nombre, altura, anchura). El nombre es obligatorio, los otros dos deben estar presentes o sustituidos por un &lt;code&gt;_&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.image /images/gopher.jpeg 200 200
.image /images/gopher.jpeg _ 300
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/images.jpeg&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;
&lt;p&gt;Al igual que las imágenes, puede hacer lo mismo con un vídeo mediante el comando &lt;code&gt;.video&lt;/code&gt;. Acepta 2 o 4 argumentos (nombre, tipo de contenido del archivo, altura, anchura). El nombre y el tipo de contenido del archivo son obligatorios; los otros dos deben estar presentes o sustituidos por y &lt;code&gt;_&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.video videos/gopher-dance.mp4 video/mp4 400 600
.video videos/gopher-dance.mkv video/mkv 500 _
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;De manera similar a las imágenes, también tiene el pedido &lt;code&gt;.background&lt;/code&gt; para configurar la imagen de fondo de una diapositiva. Sólo tiene un argumento como nombre de archivo de la imagen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.background images/susan.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;enlaces&#34;&gt;enlaces&lt;/h3&gt;
&lt;p&gt;Si va a insertar un enlace a la presentación, puede utilizar la orden &lt;code&gt;.link&lt;/code&gt;. Acepta 1 o 2 argumentos (URL HTTP, etiqueta de texto). La URL HTTP es obligatorio, el segundo es opcional.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.link https://charly3pins.dev charly3pins website
.link https://charly3pins.dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/links.jpeg&#34; alt=&#34;links&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;código&#34;&gt;código&lt;/h3&gt;
&lt;p&gt;La mejor pedido en mi opinión es la de &lt;code&gt;.code&lt;/code&gt;. Le permite poner código extraído de los archivos fuente y inyectarles como bloques &lt;!-- raw HTML omitted --&gt; escapados por HTML. Acepta un argumento como nombre de archivo seguido de una dirección opcional que especifica qué sección del archivo se mostrará.&lt;/p&gt;
&lt;p&gt;Por ejemplo, tomando Hello world a Go como código fuente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello world!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Debemos especificar como:```text
.code hello.go&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
Y se mostrará así:
![code](/images/level-up-your-presentations-with-go/code.jpeg)

Pero, ¿qué ocurre si desea resaltar alguna parte del código? No se preocupe, presente tiene este &amp;quot;presente&amp;quot; y puede añadir las &amp;quot;direcciones opcionales&amp;quot; que hemos comentado a continuación. Por lo tanto, cambie el código así para resaltar la llamada `Printf`:
```go
package main

import &amp;quot;fmt&amp;quot;

func main() {
	fmt.Println(&amp;quot;Hello world!&amp;quot;) // HL
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Y utilice el mismo comando en la diapositiva:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.code hello-hl.go
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Para ver el código resaltado:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/code-hl.jpeg&#34; alt=&#34;code-hl&#34;&gt;&lt;/p&gt;
&lt;p&gt;Un paso más! Si sólo desea mostrar una parte de su código, por ejemplo, ocultar el paquete y las importaciones de archivo, también puede agregar los siguientes fragmentos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;//START OMIT
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello world!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// HL
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;//END OMIT
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Vuelva a utilizar el mismo comando pero añadiendo el siguiente fragmento:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.code hello-hl-partial.go /START OMIT/,/END OMIT/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Y véase el código parcialmente mostrado:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/code-hl-partial.jpeg&#34; alt=&#34;code-hl-partial&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;play&#34;&gt;play&lt;/h4&gt;
&lt;p&gt;Esto comando es superpotente para ayudarle a presentar algún código y resaltar u ocultar algunas partes. Pero el espectáculo debe continuar y la mejor parte es la siguiente. El comando &lt;code&gt;.play&lt;/code&gt; es como el del &lt;code&gt;.code&lt;/code&gt;, pero pone un botón a la fuente descatalogada y puede ejecutar el programa desde el navegador. Es magia o no?
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/magic.gif&#34; alt=&#34;magic&#34;&gt;&lt;/p&gt;
&lt;p&gt;Utilizamos el mismo código fuente que estamos utilizando y añadimos el nuevo comando en las diapositivas así:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.play hello.go
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Aparecerá como el del &amp;ldquo;código&amp;rdquo;, pero si observa en el extremo inferior derecho, aparecerá un pequeño botón &lt;code&gt;Run&lt;/code&gt;.
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/code-play.jpeg&#34; alt=&#34;code-play&#34;&gt;&lt;/p&gt;
&lt;p&gt;Al ejecutar el código se mostrará una pequeña ventana negra en la pantalla donde se mostrará la salida del código:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/code-played.jpeg&#34; alt=&#34;code-played&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;notas-del-presentador&#34;&gt;Notas del presentador&lt;/h2&gt;
&lt;p&gt;Por último, pero no menos importante, es algo interesante que también proporcionan. Es bien sabido que los programas de PowerPoint o similares puede añadir sus notas sólo para vosotros cuando presentas la presentación ya veces son muy útiles. Así pues, &amp;ldquo;presente&amp;rdquo; también lo tiene en cuenta y puedes añadir tus notas de presentación sólo añadiendo un &lt;code&gt;:&lt;/code&gt; al comienzo de la frase y este texto se tratará como una nota de presentador.&lt;/p&gt;
&lt;p&gt;Por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;* Presenter notes

The gophers like to eat a lot.

: they eat more than half their body weight in food each day

They eat basically plants.

: typically gnaws the roots of a plant just beneath the soil, so the damage isn’t seen
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/present-notes.jpeg&#34; alt=&#34;present-notes&#34;&gt;&lt;/p&gt;
&lt;p&gt;Como puede ver, las notas no están presentes, ¿por qué? Porque necesita ejecutar la presentación en un &amp;ldquo;presentador&amp;rdquo; así.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span class=&#34;nx&#34;&gt;present&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;notes&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Y debería mostrar un mensaje similar a:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span class=&#34;m&#34;&gt;2020&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/10/&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;04&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;m&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;m&#34;&gt;54&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Open&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;your&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;web&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;browser&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;visit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;:&lt;span class=&#34;sr&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;127&lt;/span&gt;.&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;:&lt;span class=&#34;m&#34;&gt;3999&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2020&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/10/&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;04&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Notes&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;press&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;N&amp;#39;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;browser&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;display&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;them&lt;/span&gt;.&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Por lo tanto, si actualiza el navegador con la presentación y pulse &lt;code&gt;N&lt;/code&gt;, verá una ventana emergente que muestra las notas de cada diapositiva en la parte inferior de la siguiente manera:
&lt;img src=&#34;https://charly3pins.dev/images/level-up-your-presentations-with-go/present-notes-popup.jpeg&#34; alt=&#34;present-notes-popup&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;La herramienta &lt;code&gt;present&lt;/code&gt; es muy útil para presentaciones técnicas, especialmente en Go. Tiene limitaciones como el formato de las diapositivas y el posicionamiento de la imagen a veces difícil, pero en general es un paquete fantástico y para mí es el estándar de todas mis presentaciones. Si desea profundizar en este paquete, consulte la &lt;a href=&#34;https://godoc.org/golang.org/x/tools/present&#34;&gt;documentación oficial&lt;/a&gt; y también os recomendaría la &lt;a href=&#34;https://discussions.golang.org/2012/insidepresent.slide#1&#34;&gt;presentación&lt;/a&gt;: &lt;code&gt;Inside the&amp;quot; presente &amp;quot;tool&lt;/code&gt; de Andrew Gerrand. También he colgado el código fuente de este tutorial en &lt;a href=&#34;https://github.com/charly3pins/go-present-example&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>